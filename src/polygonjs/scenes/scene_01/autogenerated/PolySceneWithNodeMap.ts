
import {ParamValueSerializedTypeMap} from '@polygonjs/polygonjs/dist/src/engine/params/types/ParamValueSerializedTypeMap';

import {PolyScene} from '@polygonjs/polygonjs/dist/src/engine/scene/PolyScene';
// obj
import {GeoObjNode} from '@polygonjs/polygonjs/dist/src/engine/nodes/obj/Geo';
// sop
import {ActorSopNode} from '@polygonjs/polygonjs/dist/src/engine/nodes/sop/Actor';
import {AreaLightSopNode} from '@polygonjs/polygonjs/dist/src/engine/nodes/sop/AreaLight';
import {AttribCreateSopNode} from '@polygonjs/polygonjs/dist/src/engine/nodes/sop/AttribCreate';
import {AttribPromoteSopNode} from '@polygonjs/polygonjs/dist/src/engine/nodes/sop/AttribPromote';
import {BboxScatterSopNode} from '@polygonjs/polygonjs/dist/src/engine/nodes/sop/BboxScatter';
import {CameraControlsSopNode} from '@polygonjs/polygonjs/dist/src/engine/nodes/sop/CameraControls';
import {CopySopNode} from '@polygonjs/polygonjs/dist/src/engine/nodes/sop/Copy';
import {DeleteSopNode} from '@polygonjs/polygonjs/dist/src/engine/nodes/sop/Delete';
import {HemisphereLightSopNode} from '@polygonjs/polygonjs/dist/src/engine/nodes/sop/HemisphereLight';
import {MaterialSopNode} from '@polygonjs/polygonjs/dist/src/engine/nodes/sop/Material';
import {MaterialsNetworkSopNode} from '@polygonjs/polygonjs/dist/src/engine/nodes/sop/MaterialsNetwork';
import {MergeSopNode} from '@polygonjs/polygonjs/dist/src/engine/nodes/sop/Merge';
import {NoiseSopNode} from '@polygonjs/polygonjs/dist/src/engine/nodes/sop/Noise';
import {PerspectiveCameraSopNode} from '@polygonjs/polygonjs/dist/src/engine/nodes/sop/PerspectiveCamera';
import {PlaneSopNode} from '@polygonjs/polygonjs/dist/src/engine/nodes/sop/Plane';
import {PolarTransformSopNode} from '@polygonjs/polygonjs/dist/src/engine/nodes/sop/PolarTransform';
import {RaySopNode} from '@polygonjs/polygonjs/dist/src/engine/nodes/sop/Ray';
import {RestAttributesSopNode} from '@polygonjs/polygonjs/dist/src/engine/nodes/sop/RestAttributes';
import {RoundedBoxSopNode} from '@polygonjs/polygonjs/dist/src/engine/nodes/sop/RoundedBox';
import {SpotLightSopNode} from '@polygonjs/polygonjs/dist/src/engine/nodes/sop/SpotLight';
import {SwitchSopNode} from '@polygonjs/polygonjs/dist/src/engine/nodes/sop/Switch';
import {TextSopNode} from '@polygonjs/polygonjs/dist/src/engine/nodes/sop/Text';
import {TransformSopNode} from '@polygonjs/polygonjs/dist/src/engine/nodes/sop/Transform';
// event
import {CameraOrbitControlsEventNode} from '@polygonjs/polygonjs/dist/src/engine/nodes/event/CameraOrbitControls';
// actor
import {ClampActorNode} from '@polygonjs/polygonjs/dist/src/engine/nodes/actor/Clamp';
import {ComplementActorNode} from '@polygonjs/polygonjs/dist/src/engine/nodes/actor/Complement';
import {DistanceActorNode} from '@polygonjs/polygonjs/dist/src/engine/nodes/actor/Distance';
import {FloatToVec3ActorNode} from '@polygonjs/polygonjs/dist/src/engine/nodes/actor/FloatToVec3';
import {GetObjectAttributeActorNode} from '@polygonjs/polygonjs/dist/src/engine/nodes/actor/GetObjectAttribute';
import {GetObjectPropertyActorNode} from '@polygonjs/polygonjs/dist/src/engine/nodes/actor/GetObjectProperty';
import {OnTickActorNode} from '@polygonjs/polygonjs/dist/src/engine/nodes/actor/OnTick';
import {PlaneActorNode} from '@polygonjs/polygonjs/dist/src/engine/nodes/actor/Plane';
import {RayFromCursorActorNode} from '@polygonjs/polygonjs/dist/src/engine/nodes/actor/RayFromCursor';
import {RayIntersectPlaneActorNode} from '@polygonjs/polygonjs/dist/src/engine/nodes/actor/RayIntersectPlane';
import {SetObjectPositionActorNode} from '@polygonjs/polygonjs/dist/src/engine/nodes/actor/SetObjectPosition';
import {Vec3ToFloatActorNode} from '@polygonjs/polygonjs/dist/src/engine/nodes/actor/Vec3ToFloat';
// mat
import {MeshStandardBuilderMatNode} from '@polygonjs/polygonjs/dist/src/engine/nodes/mat/MeshStandardBuilder';
import {MeshStandardMatNode} from '@polygonjs/polygonjs/dist/src/engine/nodes/mat/MeshStandard';

export class PolySceneWithNodeMap_scene_01 extends PolyScene {
	node(path: '/lights'): GeoObjNode;
	node(path: '/lights/areaLight1'): AreaLightSopNode;
	node(path: '/lights/polarTransform1'): PolarTransformSopNode;
	node(path: '/lights/hemisphereLight1'): HemisphereLightSopNode;
	node(path: '/lights/merge1'): MergeSopNode;
	node(path: '/lights/spotLight1'): SpotLightSopNode;
	node(path: '/lights/merge2'): MergeSopNode;
	node(path: '/cameras'): GeoObjNode;
	node(path: '/cameras/perspectiveCamera_MAIN'): PerspectiveCameraSopNode;
	node(path: '/cameras/perspectiveCamera_DEBUG'): PerspectiveCameraSopNode;
	node(path: '/cameras/polarTransform1'): PolarTransformSopNode;
	node(path: '/cameras/polarTransform2'): PolarTransformSopNode;
	node(path: '/cameras/merge1'): MergeSopNode;
	node(path: '/cameras/cameraControls1'): CameraControlsSopNode;
	node(path: '/cameras/cameraControls1/cameraOrbitControls1'): CameraOrbitControlsEventNode;
	node(path: '/cameras/cameraControls2'): CameraControlsSopNode;
	node(path: '/cameras/cameraControls2/cameraOrbitControls1'): CameraOrbitControlsEventNode;
	node(path: '/fxhash'): GeoObjNode;
	node(path: '/fxhash/transform1'): TransformSopNode;
	node(path: '/fxhash/bboxScatter1'): BboxScatterSopNode;
	node(path: '/fxhash/transform3'): TransformSopNode;
	node(path: '/fxhash/ray1'): RaySopNode;
	node(path: '/fxhash/delete1'): DeleteSopNode;
	node(path: '/fxhash/copy1'): CopySopNode;
	node(path: '/fxhash/transform4'): TransformSopNode;
	node(path: '/fxhash/transform5'): TransformSopNode;
	node(path: '/fxhash/transform2'): TransformSopNode;
	node(path: '/fxhash/text_to2'): TextSopNode;
	node(path: '/fxhash/material1'): MaterialSopNode;
	node(path: '/fxhash/noise1'): NoiseSopNode;
	node(path: '/fxhash/attribCreate1'): AttribCreateSopNode;
	node(path: '/fxhash/attribCreate2'): AttribCreateSopNode;
	node(path: '/fxhash/switch1'): SwitchSopNode;
	node(path: '/fxhash/material2'): MaterialSopNode;
	node(path: '/fxhash/material3'): MaterialSopNode;
	node(path: '/fxhash/roundedBox1'): RoundedBoxSopNode;
	node(path: '/fxhash/transform6'): TransformSopNode;
	node(path: '/fxhash/restAttributes1'): RestAttributesSopNode;
	node(path: '/fxhash/attribPromote1'): AttribPromoteSopNode;
	node(path: '/fxhash/actor1'): ActorSopNode;
	node(path: '/fxhash/actor1/onTick1'): OnTickActorNode;
	node(path: '/fxhash/actor1/rayFromCursor1'): RayFromCursorActorNode;
	node(path: '/fxhash/actor1/rayIntersectPlane1'): RayIntersectPlaneActorNode;
	node(path: '/fxhash/actor1/plane1'): PlaneActorNode;
	node(path: '/fxhash/actor1/getObjectProperty1'): GetObjectPropertyActorNode;
	node(path: '/fxhash/actor1/distance1'): DistanceActorNode;
	node(path: '/fxhash/actor1/clamp1'): ClampActorNode;
	node(path: '/fxhash/actor1/complement1'): ComplementActorNode;
	node(path: '/fxhash/actor1/vec3ToFloat1'): Vec3ToFloatActorNode;
	node(path: '/fxhash/actor1/floatToVec3_1'): FloatToVec3ActorNode;
	node(path: '/fxhash/actor1/setObjectPosition1'): SetObjectPositionActorNode;
	node(path: '/fxhash/actor1/getObjectAttribute1'): GetObjectAttributeActorNode;
	node(path: '/fxhash/MAT'): MaterialsNetworkSopNode;
	node(path: '/fxhash/MAT/meshStandard1'): MeshStandardMatNode;
	node(path: '/fxhash/MAT/meshStandard2'): MeshStandardMatNode;
	node(path: '/fxhash/MAT/meshStandardBuilder3'): MeshStandardBuilderMatNode;
	node(path: '/floor'): GeoObjNode;
	node(path: '/floor/plane1'): PlaneSopNode;
	node(path: '/floor/material1'): MaterialSopNode;
	node(path: '/floor/MAT'): MaterialsNetworkSopNode;
	node(path: '/floor/MAT/meshStandard1'): MeshStandardMatNode;
	node(path: string):any /* we need any for now as otherwise an error occurs when adding plugins to the overloaded methods */ {
		return super.node(path);
	}
}


export interface PolySceneProps_scene_01 {
	'lights--transform'?: ParamValueSerializedTypeMap['folder'];
	'lights--keepPosWhenParenting'?: ParamValueSerializedTypeMap['boolean'];
	'lights--rotationOrder'?: ParamValueSerializedTypeMap['integer'];
	'lights--t'?: ParamValueSerializedTypeMap['vector3'];
	'lights--t-tx'?: ParamValueSerializedTypeMap['float'];
	'lights--t-ty'?: ParamValueSerializedTypeMap['float'];
	'lights--t-tz'?: ParamValueSerializedTypeMap['float'];
	'lights--tx'?: ParamValueSerializedTypeMap['float'];
	'lights--ty'?: ParamValueSerializedTypeMap['float'];
	'lights--tz'?: ParamValueSerializedTypeMap['float'];
	'lights--r'?: ParamValueSerializedTypeMap['vector3'];
	'lights--r-rx'?: ParamValueSerializedTypeMap['float'];
	'lights--r-ry'?: ParamValueSerializedTypeMap['float'];
	'lights--r-rz'?: ParamValueSerializedTypeMap['float'];
	'lights--rx'?: ParamValueSerializedTypeMap['float'];
	'lights--ry'?: ParamValueSerializedTypeMap['float'];
	'lights--rz'?: ParamValueSerializedTypeMap['float'];
	'lights--s'?: ParamValueSerializedTypeMap['vector3'];
	'lights--s-sx'?: ParamValueSerializedTypeMap['float'];
	'lights--s-sy'?: ParamValueSerializedTypeMap['float'];
	'lights--s-sz'?: ParamValueSerializedTypeMap['float'];
	'lights--sx'?: ParamValueSerializedTypeMap['float'];
	'lights--sy'?: ParamValueSerializedTypeMap['float'];
	'lights--sz'?: ParamValueSerializedTypeMap['float'];
	'lights--scale'?: ParamValueSerializedTypeMap['float'];
	'lights--matrixAutoUpdate'?: ParamValueSerializedTypeMap['boolean'];
	'lights--updateTransformFromObject'?: ParamValueSerializedTypeMap['button'];
	'lights--display'?: ParamValueSerializedTypeMap['boolean'];
	'lights--renderOrder'?: ParamValueSerializedTypeMap['integer'];
	'lights-areaLight1--light'?: ParamValueSerializedTypeMap['folder'];
	'lights-areaLight1--color'?: ParamValueSerializedTypeMap['color'];
	'lights-areaLight1--color-colorr'?: ParamValueSerializedTypeMap['float'];
	'lights-areaLight1--color-colorg'?: ParamValueSerializedTypeMap['float'];
	'lights-areaLight1--color-colorb'?: ParamValueSerializedTypeMap['float'];
	'lights-areaLight1--colorr'?: ParamValueSerializedTypeMap['float'];
	'lights-areaLight1--colorg'?: ParamValueSerializedTypeMap['float'];
	'lights-areaLight1--colorb'?: ParamValueSerializedTypeMap['float'];
	'lights-areaLight1--intensity'?: ParamValueSerializedTypeMap['float'];
	'lights-areaLight1--width'?: ParamValueSerializedTypeMap['float'];
	'lights-areaLight1--height'?: ParamValueSerializedTypeMap['float'];
	'lights-areaLight1--showHelper'?: ParamValueSerializedTypeMap['boolean'];
	'lights-areaLight1--name'?: ParamValueSerializedTypeMap['string'];
	'lights-polarTransform1--applyOn'?: ParamValueSerializedTypeMap['integer'];
	'lights-polarTransform1--center'?: ParamValueSerializedTypeMap['vector3'];
	'lights-polarTransform1--center-centerx'?: ParamValueSerializedTypeMap['float'];
	'lights-polarTransform1--center-centery'?: ParamValueSerializedTypeMap['float'];
	'lights-polarTransform1--center-centerz'?: ParamValueSerializedTypeMap['float'];
	'lights-polarTransform1--centerx'?: ParamValueSerializedTypeMap['float'];
	'lights-polarTransform1--centery'?: ParamValueSerializedTypeMap['float'];
	'lights-polarTransform1--centerz'?: ParamValueSerializedTypeMap['float'];
	'lights-polarTransform1--longitude'?: ParamValueSerializedTypeMap['float'];
	'lights-polarTransform1--latitude'?: ParamValueSerializedTypeMap['float'];
	'lights-polarTransform1--depth'?: ParamValueSerializedTypeMap['float'];
	'lights-hemisphereLight1--skyColor'?: ParamValueSerializedTypeMap['color'];
	'lights-hemisphereLight1--skyColor-skyColorr'?: ParamValueSerializedTypeMap['float'];
	'lights-hemisphereLight1--skyColor-skyColorg'?: ParamValueSerializedTypeMap['float'];
	'lights-hemisphereLight1--skyColor-skyColorb'?: ParamValueSerializedTypeMap['float'];
	'lights-hemisphereLight1--skyColorr'?: ParamValueSerializedTypeMap['float'];
	'lights-hemisphereLight1--skyColorg'?: ParamValueSerializedTypeMap['float'];
	'lights-hemisphereLight1--skyColorb'?: ParamValueSerializedTypeMap['float'];
	'lights-hemisphereLight1--groundColor'?: ParamValueSerializedTypeMap['color'];
	'lights-hemisphereLight1--groundColor-groundColorr'?: ParamValueSerializedTypeMap['float'];
	'lights-hemisphereLight1--groundColor-groundColorg'?: ParamValueSerializedTypeMap['float'];
	'lights-hemisphereLight1--groundColor-groundColorb'?: ParamValueSerializedTypeMap['float'];
	'lights-hemisphereLight1--groundColorr'?: ParamValueSerializedTypeMap['float'];
	'lights-hemisphereLight1--groundColorg'?: ParamValueSerializedTypeMap['float'];
	'lights-hemisphereLight1--groundColorb'?: ParamValueSerializedTypeMap['float'];
	'lights-hemisphereLight1--intensity'?: ParamValueSerializedTypeMap['float'];
	'lights-hemisphereLight1--position'?: ParamValueSerializedTypeMap['vector3'];
	'lights-hemisphereLight1--position-positionx'?: ParamValueSerializedTypeMap['float'];
	'lights-hemisphereLight1--position-positiony'?: ParamValueSerializedTypeMap['float'];
	'lights-hemisphereLight1--position-positionz'?: ParamValueSerializedTypeMap['float'];
	'lights-hemisphereLight1--positionx'?: ParamValueSerializedTypeMap['float'];
	'lights-hemisphereLight1--positiony'?: ParamValueSerializedTypeMap['float'];
	'lights-hemisphereLight1--positionz'?: ParamValueSerializedTypeMap['float'];
	'lights-hemisphereLight1--name'?: ParamValueSerializedTypeMap['string'];
	'lights-merge1--compact'?: ParamValueSerializedTypeMap['boolean'];
	'lights-merge1--inputsCount'?: ParamValueSerializedTypeMap['integer'];
	'lights-spotLight1--light'?: ParamValueSerializedTypeMap['folder'];
	'lights-spotLight1--color'?: ParamValueSerializedTypeMap['color'];
	'lights-spotLight1--color-colorr'?: ParamValueSerializedTypeMap['float'];
	'lights-spotLight1--color-colorg'?: ParamValueSerializedTypeMap['float'];
	'lights-spotLight1--color-colorb'?: ParamValueSerializedTypeMap['float'];
	'lights-spotLight1--colorr'?: ParamValueSerializedTypeMap['float'];
	'lights-spotLight1--colorg'?: ParamValueSerializedTypeMap['float'];
	'lights-spotLight1--colorb'?: ParamValueSerializedTypeMap['float'];
	'lights-spotLight1--intensity'?: ParamValueSerializedTypeMap['float'];
	'lights-spotLight1--angle'?: ParamValueSerializedTypeMap['float'];
	'lights-spotLight1--penumbra'?: ParamValueSerializedTypeMap['float'];
	'lights-spotLight1--decay'?: ParamValueSerializedTypeMap['float'];
	'lights-spotLight1--distance'?: ParamValueSerializedTypeMap['float'];
	'lights-spotLight1--showHelper'?: ParamValueSerializedTypeMap['boolean'];
	'lights-spotLight1--helperSize'?: ParamValueSerializedTypeMap['float'];
	'lights-spotLight1--name'?: ParamValueSerializedTypeMap['string'];
	'lights-spotLight1--shadow'?: ParamValueSerializedTypeMap['folder'];
	'lights-spotLight1--castShadow'?: ParamValueSerializedTypeMap['boolean'];
	'lights-spotLight1--shadowAutoUpdate'?: ParamValueSerializedTypeMap['boolean'];
	'lights-spotLight1--shadowUpdateOnNextRender'?: ParamValueSerializedTypeMap['boolean'];
	'lights-spotLight1--shadowRes'?: ParamValueSerializedTypeMap['vector2'];
	'lights-spotLight1--shadowRes-shadowResx'?: ParamValueSerializedTypeMap['float'];
	'lights-spotLight1--shadowRes-shadowResy'?: ParamValueSerializedTypeMap['float'];
	'lights-spotLight1--shadowResx'?: ParamValueSerializedTypeMap['float'];
	'lights-spotLight1--shadowResy'?: ParamValueSerializedTypeMap['float'];
	'lights-spotLight1--shadowBias'?: ParamValueSerializedTypeMap['float'];
	'lights-spotLight1--shadowNear'?: ParamValueSerializedTypeMap['float'];
	'lights-spotLight1--shadowFar'?: ParamValueSerializedTypeMap['float'];
	'lights-spotLight1--shadowRadius'?: ParamValueSerializedTypeMap['float'];
	'lights-spotLight1--volumetric'?: ParamValueSerializedTypeMap['folder'];
	'lights-spotLight1--tvolumetric'?: ParamValueSerializedTypeMap['boolean'];
	'lights-spotLight1--volAttenuation'?: ParamValueSerializedTypeMap['float'];
	'lights-spotLight1--volAnglePower'?: ParamValueSerializedTypeMap['float'];
	'lights-merge2--compact'?: ParamValueSerializedTypeMap['boolean'];
	'lights-merge2--inputsCount'?: ParamValueSerializedTypeMap['integer'];
	'cameras--transform'?: ParamValueSerializedTypeMap['folder'];
	'cameras--keepPosWhenParenting'?: ParamValueSerializedTypeMap['boolean'];
	'cameras--rotationOrder'?: ParamValueSerializedTypeMap['integer'];
	'cameras--t'?: ParamValueSerializedTypeMap['vector3'];
	'cameras--t-tx'?: ParamValueSerializedTypeMap['float'];
	'cameras--t-ty'?: ParamValueSerializedTypeMap['float'];
	'cameras--t-tz'?: ParamValueSerializedTypeMap['float'];
	'cameras--tx'?: ParamValueSerializedTypeMap['float'];
	'cameras--ty'?: ParamValueSerializedTypeMap['float'];
	'cameras--tz'?: ParamValueSerializedTypeMap['float'];
	'cameras--r'?: ParamValueSerializedTypeMap['vector3'];
	'cameras--r-rx'?: ParamValueSerializedTypeMap['float'];
	'cameras--r-ry'?: ParamValueSerializedTypeMap['float'];
	'cameras--r-rz'?: ParamValueSerializedTypeMap['float'];
	'cameras--rx'?: ParamValueSerializedTypeMap['float'];
	'cameras--ry'?: ParamValueSerializedTypeMap['float'];
	'cameras--rz'?: ParamValueSerializedTypeMap['float'];
	'cameras--s'?: ParamValueSerializedTypeMap['vector3'];
	'cameras--s-sx'?: ParamValueSerializedTypeMap['float'];
	'cameras--s-sy'?: ParamValueSerializedTypeMap['float'];
	'cameras--s-sz'?: ParamValueSerializedTypeMap['float'];
	'cameras--sx'?: ParamValueSerializedTypeMap['float'];
	'cameras--sy'?: ParamValueSerializedTypeMap['float'];
	'cameras--sz'?: ParamValueSerializedTypeMap['float'];
	'cameras--scale'?: ParamValueSerializedTypeMap['float'];
	'cameras--matrixAutoUpdate'?: ParamValueSerializedTypeMap['boolean'];
	'cameras--updateTransformFromObject'?: ParamValueSerializedTypeMap['button'];
	'cameras--display'?: ParamValueSerializedTypeMap['boolean'];
	'cameras--renderOrder'?: ParamValueSerializedTypeMap['integer'];
	'cameras-perspectiveCamera_MAIN--fov'?: ParamValueSerializedTypeMap['float'];
	'cameras-perspectiveCamera_MAIN--near'?: ParamValueSerializedTypeMap['float'];
	'cameras-perspectiveCamera_MAIN--far'?: ParamValueSerializedTypeMap['float'];
	'cameras-perspectiveCamera_MAIN--position'?: ParamValueSerializedTypeMap['vector3'];
	'cameras-perspectiveCamera_MAIN--position-positionx'?: ParamValueSerializedTypeMap['float'];
	'cameras-perspectiveCamera_MAIN--position-positiony'?: ParamValueSerializedTypeMap['float'];
	'cameras-perspectiveCamera_MAIN--position-positionz'?: ParamValueSerializedTypeMap['float'];
	'cameras-perspectiveCamera_MAIN--positionx'?: ParamValueSerializedTypeMap['float'];
	'cameras-perspectiveCamera_MAIN--positiony'?: ParamValueSerializedTypeMap['float'];
	'cameras-perspectiveCamera_MAIN--positionz'?: ParamValueSerializedTypeMap['float'];
	'cameras-perspectiveCamera_MAIN--rotation'?: ParamValueSerializedTypeMap['vector3'];
	'cameras-perspectiveCamera_MAIN--rotation-rotationx'?: ParamValueSerializedTypeMap['float'];
	'cameras-perspectiveCamera_MAIN--rotation-rotationy'?: ParamValueSerializedTypeMap['float'];
	'cameras-perspectiveCamera_MAIN--rotation-rotationz'?: ParamValueSerializedTypeMap['float'];
	'cameras-perspectiveCamera_MAIN--rotationx'?: ParamValueSerializedTypeMap['float'];
	'cameras-perspectiveCamera_MAIN--rotationy'?: ParamValueSerializedTypeMap['float'];
	'cameras-perspectiveCamera_MAIN--rotationz'?: ParamValueSerializedTypeMap['float'];
	'cameras-perspectiveCamera_MAIN--showHelper'?: ParamValueSerializedTypeMap['boolean'];
	'cameras-perspectiveCamera_MAIN--matrixAutoUpdate'?: ParamValueSerializedTypeMap['boolean'];
	'cameras-perspectiveCamera_MAIN--name'?: ParamValueSerializedTypeMap['string'];
	'cameras-perspectiveCamera_DEBUG--fov'?: ParamValueSerializedTypeMap['float'];
	'cameras-perspectiveCamera_DEBUG--near'?: ParamValueSerializedTypeMap['float'];
	'cameras-perspectiveCamera_DEBUG--far'?: ParamValueSerializedTypeMap['float'];
	'cameras-perspectiveCamera_DEBUG--position'?: ParamValueSerializedTypeMap['vector3'];
	'cameras-perspectiveCamera_DEBUG--position-positionx'?: ParamValueSerializedTypeMap['float'];
	'cameras-perspectiveCamera_DEBUG--position-positiony'?: ParamValueSerializedTypeMap['float'];
	'cameras-perspectiveCamera_DEBUG--position-positionz'?: ParamValueSerializedTypeMap['float'];
	'cameras-perspectiveCamera_DEBUG--positionx'?: ParamValueSerializedTypeMap['float'];
	'cameras-perspectiveCamera_DEBUG--positiony'?: ParamValueSerializedTypeMap['float'];
	'cameras-perspectiveCamera_DEBUG--positionz'?: ParamValueSerializedTypeMap['float'];
	'cameras-perspectiveCamera_DEBUG--rotation'?: ParamValueSerializedTypeMap['vector3'];
	'cameras-perspectiveCamera_DEBUG--rotation-rotationx'?: ParamValueSerializedTypeMap['float'];
	'cameras-perspectiveCamera_DEBUG--rotation-rotationy'?: ParamValueSerializedTypeMap['float'];
	'cameras-perspectiveCamera_DEBUG--rotation-rotationz'?: ParamValueSerializedTypeMap['float'];
	'cameras-perspectiveCamera_DEBUG--rotationx'?: ParamValueSerializedTypeMap['float'];
	'cameras-perspectiveCamera_DEBUG--rotationy'?: ParamValueSerializedTypeMap['float'];
	'cameras-perspectiveCamera_DEBUG--rotationz'?: ParamValueSerializedTypeMap['float'];
	'cameras-perspectiveCamera_DEBUG--showHelper'?: ParamValueSerializedTypeMap['boolean'];
	'cameras-perspectiveCamera_DEBUG--matrixAutoUpdate'?: ParamValueSerializedTypeMap['boolean'];
	'cameras-perspectiveCamera_DEBUG--name'?: ParamValueSerializedTypeMap['string'];
	'cameras-polarTransform1--applyOn'?: ParamValueSerializedTypeMap['integer'];
	'cameras-polarTransform1--center'?: ParamValueSerializedTypeMap['vector3'];
	'cameras-polarTransform1--center-centerx'?: ParamValueSerializedTypeMap['float'];
	'cameras-polarTransform1--center-centery'?: ParamValueSerializedTypeMap['float'];
	'cameras-polarTransform1--center-centerz'?: ParamValueSerializedTypeMap['float'];
	'cameras-polarTransform1--centerx'?: ParamValueSerializedTypeMap['float'];
	'cameras-polarTransform1--centery'?: ParamValueSerializedTypeMap['float'];
	'cameras-polarTransform1--centerz'?: ParamValueSerializedTypeMap['float'];
	'cameras-polarTransform1--longitude'?: ParamValueSerializedTypeMap['float'];
	'cameras-polarTransform1--latitude'?: ParamValueSerializedTypeMap['float'];
	'cameras-polarTransform1--depth'?: ParamValueSerializedTypeMap['float'];
	'cameras-polarTransform2--applyOn'?: ParamValueSerializedTypeMap['integer'];
	'cameras-polarTransform2--center'?: ParamValueSerializedTypeMap['vector3'];
	'cameras-polarTransform2--center-centerx'?: ParamValueSerializedTypeMap['float'];
	'cameras-polarTransform2--center-centery'?: ParamValueSerializedTypeMap['float'];
	'cameras-polarTransform2--center-centerz'?: ParamValueSerializedTypeMap['float'];
	'cameras-polarTransform2--centerx'?: ParamValueSerializedTypeMap['float'];
	'cameras-polarTransform2--centery'?: ParamValueSerializedTypeMap['float'];
	'cameras-polarTransform2--centerz'?: ParamValueSerializedTypeMap['float'];
	'cameras-polarTransform2--longitude'?: ParamValueSerializedTypeMap['float'];
	'cameras-polarTransform2--latitude'?: ParamValueSerializedTypeMap['float'];
	'cameras-polarTransform2--depth'?: ParamValueSerializedTypeMap['float'];
	'cameras-merge1--compact'?: ParamValueSerializedTypeMap['boolean'];
	'cameras-merge1--inputsCount'?: ParamValueSerializedTypeMap['integer'];
	'cameras-cameraControls1--node'?: ParamValueSerializedTypeMap['node_path'];
	'cameras-cameraControls1-cameraOrbitControls1--enabled'?: ParamValueSerializedTypeMap['boolean'];
	'cameras-cameraControls1-cameraOrbitControls1--allowPan'?: ParamValueSerializedTypeMap['boolean'];
	'cameras-cameraControls1-cameraOrbitControls1--allowRotate'?: ParamValueSerializedTypeMap['boolean'];
	'cameras-cameraControls1-cameraOrbitControls1--allowZoom'?: ParamValueSerializedTypeMap['boolean'];
	'cameras-cameraControls1-cameraOrbitControls1--tdamping'?: ParamValueSerializedTypeMap['boolean'];
	'cameras-cameraControls1-cameraOrbitControls1--damping'?: ParamValueSerializedTypeMap['float'];
	'cameras-cameraControls1-cameraOrbitControls1--screenSpacePanning'?: ParamValueSerializedTypeMap['boolean'];
	'cameras-cameraControls1-cameraOrbitControls1--rotateSpeed'?: ParamValueSerializedTypeMap['float'];
	'cameras-cameraControls1-cameraOrbitControls1--minDistance'?: ParamValueSerializedTypeMap['float'];
	'cameras-cameraControls1-cameraOrbitControls1--maxDistance'?: ParamValueSerializedTypeMap['float'];
	'cameras-cameraControls1-cameraOrbitControls1--limitAzimuthAngle'?: ParamValueSerializedTypeMap['boolean'];
	'cameras-cameraControls1-cameraOrbitControls1--azimuthAngleRange'?: ParamValueSerializedTypeMap['vector2'];
	'cameras-cameraControls1-cameraOrbitControls1--azimuthAngleRange-azimuthAngleRangex'?: ParamValueSerializedTypeMap['float'];
	'cameras-cameraControls1-cameraOrbitControls1--azimuthAngleRange-azimuthAngleRangey'?: ParamValueSerializedTypeMap['float'];
	'cameras-cameraControls1-cameraOrbitControls1--azimuthAngleRangex'?: ParamValueSerializedTypeMap['float'];
	'cameras-cameraControls1-cameraOrbitControls1--azimuthAngleRangey'?: ParamValueSerializedTypeMap['float'];
	'cameras-cameraControls1-cameraOrbitControls1--polarAngleRange'?: ParamValueSerializedTypeMap['vector2'];
	'cameras-cameraControls1-cameraOrbitControls1--polarAngleRange-polarAngleRangex'?: ParamValueSerializedTypeMap['float'];
	'cameras-cameraControls1-cameraOrbitControls1--polarAngleRange-polarAngleRangey'?: ParamValueSerializedTypeMap['float'];
	'cameras-cameraControls1-cameraOrbitControls1--polarAngleRangex'?: ParamValueSerializedTypeMap['float'];
	'cameras-cameraControls1-cameraOrbitControls1--polarAngleRangey'?: ParamValueSerializedTypeMap['float'];
	'cameras-cameraControls1-cameraOrbitControls1--target'?: ParamValueSerializedTypeMap['vector3'];
	'cameras-cameraControls1-cameraOrbitControls1--target-targetx'?: ParamValueSerializedTypeMap['float'];
	'cameras-cameraControls1-cameraOrbitControls1--target-targety'?: ParamValueSerializedTypeMap['float'];
	'cameras-cameraControls1-cameraOrbitControls1--target-targetz'?: ParamValueSerializedTypeMap['float'];
	'cameras-cameraControls1-cameraOrbitControls1--targetx'?: ParamValueSerializedTypeMap['float'];
	'cameras-cameraControls1-cameraOrbitControls1--targety'?: ParamValueSerializedTypeMap['float'];
	'cameras-cameraControls1-cameraOrbitControls1--targetz'?: ParamValueSerializedTypeMap['float'];
	'cameras-cameraControls1-cameraOrbitControls1--enableKeys'?: ParamValueSerializedTypeMap['boolean'];
	'cameras-cameraControls1-cameraOrbitControls1--keysMode'?: ParamValueSerializedTypeMap['integer'];
	'cameras-cameraControls1-cameraOrbitControls1--keysPanSpeed'?: ParamValueSerializedTypeMap['float'];
	'cameras-cameraControls1-cameraOrbitControls1--keysRotateSpeedVertical'?: ParamValueSerializedTypeMap['float'];
	'cameras-cameraControls1-cameraOrbitControls1--keysRotateSpeedHorizontal'?: ParamValueSerializedTypeMap['float'];
	'cameras-cameraControls2--node'?: ParamValueSerializedTypeMap['node_path'];
	'cameras-cameraControls2-cameraOrbitControls1--enabled'?: ParamValueSerializedTypeMap['boolean'];
	'cameras-cameraControls2-cameraOrbitControls1--allowPan'?: ParamValueSerializedTypeMap['boolean'];
	'cameras-cameraControls2-cameraOrbitControls1--allowRotate'?: ParamValueSerializedTypeMap['boolean'];
	'cameras-cameraControls2-cameraOrbitControls1--allowZoom'?: ParamValueSerializedTypeMap['boolean'];
	'cameras-cameraControls2-cameraOrbitControls1--tdamping'?: ParamValueSerializedTypeMap['boolean'];
	'cameras-cameraControls2-cameraOrbitControls1--damping'?: ParamValueSerializedTypeMap['float'];
	'cameras-cameraControls2-cameraOrbitControls1--screenSpacePanning'?: ParamValueSerializedTypeMap['boolean'];
	'cameras-cameraControls2-cameraOrbitControls1--rotateSpeed'?: ParamValueSerializedTypeMap['float'];
	'cameras-cameraControls2-cameraOrbitControls1--minDistance'?: ParamValueSerializedTypeMap['float'];
	'cameras-cameraControls2-cameraOrbitControls1--maxDistance'?: ParamValueSerializedTypeMap['float'];
	'cameras-cameraControls2-cameraOrbitControls1--limitAzimuthAngle'?: ParamValueSerializedTypeMap['boolean'];
	'cameras-cameraControls2-cameraOrbitControls1--azimuthAngleRange'?: ParamValueSerializedTypeMap['vector2'];
	'cameras-cameraControls2-cameraOrbitControls1--azimuthAngleRange-azimuthAngleRangex'?: ParamValueSerializedTypeMap['float'];
	'cameras-cameraControls2-cameraOrbitControls1--azimuthAngleRange-azimuthAngleRangey'?: ParamValueSerializedTypeMap['float'];
	'cameras-cameraControls2-cameraOrbitControls1--azimuthAngleRangex'?: ParamValueSerializedTypeMap['float'];
	'cameras-cameraControls2-cameraOrbitControls1--azimuthAngleRangey'?: ParamValueSerializedTypeMap['float'];
	'cameras-cameraControls2-cameraOrbitControls1--polarAngleRange'?: ParamValueSerializedTypeMap['vector2'];
	'cameras-cameraControls2-cameraOrbitControls1--polarAngleRange-polarAngleRangex'?: ParamValueSerializedTypeMap['float'];
	'cameras-cameraControls2-cameraOrbitControls1--polarAngleRange-polarAngleRangey'?: ParamValueSerializedTypeMap['float'];
	'cameras-cameraControls2-cameraOrbitControls1--polarAngleRangex'?: ParamValueSerializedTypeMap['float'];
	'cameras-cameraControls2-cameraOrbitControls1--polarAngleRangey'?: ParamValueSerializedTypeMap['float'];
	'cameras-cameraControls2-cameraOrbitControls1--target'?: ParamValueSerializedTypeMap['vector3'];
	'cameras-cameraControls2-cameraOrbitControls1--target-targetx'?: ParamValueSerializedTypeMap['float'];
	'cameras-cameraControls2-cameraOrbitControls1--target-targety'?: ParamValueSerializedTypeMap['float'];
	'cameras-cameraControls2-cameraOrbitControls1--target-targetz'?: ParamValueSerializedTypeMap['float'];
	'cameras-cameraControls2-cameraOrbitControls1--targetx'?: ParamValueSerializedTypeMap['float'];
	'cameras-cameraControls2-cameraOrbitControls1--targety'?: ParamValueSerializedTypeMap['float'];
	'cameras-cameraControls2-cameraOrbitControls1--targetz'?: ParamValueSerializedTypeMap['float'];
	'cameras-cameraControls2-cameraOrbitControls1--enableKeys'?: ParamValueSerializedTypeMap['boolean'];
	'cameras-cameraControls2-cameraOrbitControls1--keysMode'?: ParamValueSerializedTypeMap['integer'];
	'cameras-cameraControls2-cameraOrbitControls1--keysPanSpeed'?: ParamValueSerializedTypeMap['float'];
	'cameras-cameraControls2-cameraOrbitControls1--keysRotateSpeedVertical'?: ParamValueSerializedTypeMap['float'];
	'cameras-cameraControls2-cameraOrbitControls1--keysRotateSpeedHorizontal'?: ParamValueSerializedTypeMap['float'];
	'fxhash--transform'?: ParamValueSerializedTypeMap['folder'];
	'fxhash--keepPosWhenParenting'?: ParamValueSerializedTypeMap['boolean'];
	'fxhash--rotationOrder'?: ParamValueSerializedTypeMap['integer'];
	'fxhash--t'?: ParamValueSerializedTypeMap['vector3'];
	'fxhash--t-tx'?: ParamValueSerializedTypeMap['float'];
	'fxhash--t-ty'?: ParamValueSerializedTypeMap['float'];
	'fxhash--t-tz'?: ParamValueSerializedTypeMap['float'];
	'fxhash--tx'?: ParamValueSerializedTypeMap['float'];
	'fxhash--ty'?: ParamValueSerializedTypeMap['float'];
	'fxhash--tz'?: ParamValueSerializedTypeMap['float'];
	'fxhash--r'?: ParamValueSerializedTypeMap['vector3'];
	'fxhash--r-rx'?: ParamValueSerializedTypeMap['float'];
	'fxhash--r-ry'?: ParamValueSerializedTypeMap['float'];
	'fxhash--r-rz'?: ParamValueSerializedTypeMap['float'];
	'fxhash--rx'?: ParamValueSerializedTypeMap['float'];
	'fxhash--ry'?: ParamValueSerializedTypeMap['float'];
	'fxhash--rz'?: ParamValueSerializedTypeMap['float'];
	'fxhash--s'?: ParamValueSerializedTypeMap['vector3'];
	'fxhash--s-sx'?: ParamValueSerializedTypeMap['float'];
	'fxhash--s-sy'?: ParamValueSerializedTypeMap['float'];
	'fxhash--s-sz'?: ParamValueSerializedTypeMap['float'];
	'fxhash--sx'?: ParamValueSerializedTypeMap['float'];
	'fxhash--sy'?: ParamValueSerializedTypeMap['float'];
	'fxhash--sz'?: ParamValueSerializedTypeMap['float'];
	'fxhash--scale'?: ParamValueSerializedTypeMap['float'];
	'fxhash--matrixAutoUpdate'?: ParamValueSerializedTypeMap['boolean'];
	'fxhash--updateTransformFromObject'?: ParamValueSerializedTypeMap['button'];
	'fxhash--display'?: ParamValueSerializedTypeMap['boolean'];
	'fxhash--renderOrder'?: ParamValueSerializedTypeMap['integer'];
	'fxhash-transform1--applyOn'?: ParamValueSerializedTypeMap['integer'];
	'fxhash-transform1--objectMode'?: ParamValueSerializedTypeMap['integer'];
	'fxhash-transform1--group'?: ParamValueSerializedTypeMap['string'];
	'fxhash-transform1--rotationOrder'?: ParamValueSerializedTypeMap['integer'];
	'fxhash-transform1--t'?: ParamValueSerializedTypeMap['vector3'];
	'fxhash-transform1--t-tx'?: ParamValueSerializedTypeMap['float'];
	'fxhash-transform1--t-ty'?: ParamValueSerializedTypeMap['float'];
	'fxhash-transform1--t-tz'?: ParamValueSerializedTypeMap['float'];
	'fxhash-transform1--tx'?: ParamValueSerializedTypeMap['float'];
	'fxhash-transform1--ty'?: ParamValueSerializedTypeMap['float'];
	'fxhash-transform1--tz'?: ParamValueSerializedTypeMap['float'];
	'fxhash-transform1--r'?: ParamValueSerializedTypeMap['vector3'];
	'fxhash-transform1--r-rx'?: ParamValueSerializedTypeMap['float'];
	'fxhash-transform1--r-ry'?: ParamValueSerializedTypeMap['float'];
	'fxhash-transform1--r-rz'?: ParamValueSerializedTypeMap['float'];
	'fxhash-transform1--rx'?: ParamValueSerializedTypeMap['float'];
	'fxhash-transform1--ry'?: ParamValueSerializedTypeMap['float'];
	'fxhash-transform1--rz'?: ParamValueSerializedTypeMap['float'];
	'fxhash-transform1--s'?: ParamValueSerializedTypeMap['vector3'];
	'fxhash-transform1--s-sx'?: ParamValueSerializedTypeMap['float'];
	'fxhash-transform1--s-sy'?: ParamValueSerializedTypeMap['float'];
	'fxhash-transform1--s-sz'?: ParamValueSerializedTypeMap['float'];
	'fxhash-transform1--sx'?: ParamValueSerializedTypeMap['float'];
	'fxhash-transform1--sy'?: ParamValueSerializedTypeMap['float'];
	'fxhash-transform1--sz'?: ParamValueSerializedTypeMap['float'];
	'fxhash-transform1--scale'?: ParamValueSerializedTypeMap['float'];
	'fxhash-transform1--pivot'?: ParamValueSerializedTypeMap['vector3'];
	'fxhash-transform1--pivot-pivotx'?: ParamValueSerializedTypeMap['float'];
	'fxhash-transform1--pivot-pivoty'?: ParamValueSerializedTypeMap['float'];
	'fxhash-transform1--pivot-pivotz'?: ParamValueSerializedTypeMap['float'];
	'fxhash-transform1--pivotx'?: ParamValueSerializedTypeMap['float'];
	'fxhash-transform1--pivoty'?: ParamValueSerializedTypeMap['float'];
	'fxhash-transform1--pivotz'?: ParamValueSerializedTypeMap['float'];
	'fxhash-bboxScatter1--stepSize'?: ParamValueSerializedTypeMap['float'];
	'fxhash-transform3--applyOn'?: ParamValueSerializedTypeMap['integer'];
	'fxhash-transform3--objectMode'?: ParamValueSerializedTypeMap['integer'];
	'fxhash-transform3--group'?: ParamValueSerializedTypeMap['string'];
	'fxhash-transform3--rotationOrder'?: ParamValueSerializedTypeMap['integer'];
	'fxhash-transform3--t'?: ParamValueSerializedTypeMap['vector3'];
	'fxhash-transform3--t-tx'?: ParamValueSerializedTypeMap['float'];
	'fxhash-transform3--t-ty'?: ParamValueSerializedTypeMap['float'];
	'fxhash-transform3--t-tz'?: ParamValueSerializedTypeMap['float'];
	'fxhash-transform3--tx'?: ParamValueSerializedTypeMap['float'];
	'fxhash-transform3--ty'?: ParamValueSerializedTypeMap['float'];
	'fxhash-transform3--tz'?: ParamValueSerializedTypeMap['float'];
	'fxhash-transform3--r'?: ParamValueSerializedTypeMap['vector3'];
	'fxhash-transform3--r-rx'?: ParamValueSerializedTypeMap['float'];
	'fxhash-transform3--r-ry'?: ParamValueSerializedTypeMap['float'];
	'fxhash-transform3--r-rz'?: ParamValueSerializedTypeMap['float'];
	'fxhash-transform3--rx'?: ParamValueSerializedTypeMap['float'];
	'fxhash-transform3--ry'?: ParamValueSerializedTypeMap['float'];
	'fxhash-transform3--rz'?: ParamValueSerializedTypeMap['float'];
	'fxhash-transform3--s'?: ParamValueSerializedTypeMap['vector3'];
	'fxhash-transform3--s-sx'?: ParamValueSerializedTypeMap['float'];
	'fxhash-transform3--s-sy'?: ParamValueSerializedTypeMap['float'];
	'fxhash-transform3--s-sz'?: ParamValueSerializedTypeMap['float'];
	'fxhash-transform3--sx'?: ParamValueSerializedTypeMap['float'];
	'fxhash-transform3--sy'?: ParamValueSerializedTypeMap['float'];
	'fxhash-transform3--sz'?: ParamValueSerializedTypeMap['float'];
	'fxhash-transform3--scale'?: ParamValueSerializedTypeMap['float'];
	'fxhash-transform3--pivot'?: ParamValueSerializedTypeMap['vector3'];
	'fxhash-transform3--pivot-pivotx'?: ParamValueSerializedTypeMap['float'];
	'fxhash-transform3--pivot-pivoty'?: ParamValueSerializedTypeMap['float'];
	'fxhash-transform3--pivot-pivotz'?: ParamValueSerializedTypeMap['float'];
	'fxhash-transform3--pivotx'?: ParamValueSerializedTypeMap['float'];
	'fxhash-transform3--pivoty'?: ParamValueSerializedTypeMap['float'];
	'fxhash-transform3--pivotz'?: ParamValueSerializedTypeMap['float'];
	'fxhash-ray1--mode'?: ParamValueSerializedTypeMap['integer'];
	'fxhash-ray1--useNormals'?: ParamValueSerializedTypeMap['boolean'];
	'fxhash-ray1--direction'?: ParamValueSerializedTypeMap['vector3'];
	'fxhash-ray1--direction-directionx'?: ParamValueSerializedTypeMap['float'];
	'fxhash-ray1--direction-directiony'?: ParamValueSerializedTypeMap['float'];
	'fxhash-ray1--direction-directionz'?: ParamValueSerializedTypeMap['float'];
	'fxhash-ray1--directionx'?: ParamValueSerializedTypeMap['float'];
	'fxhash-ray1--directiony'?: ParamValueSerializedTypeMap['float'];
	'fxhash-ray1--directionz'?: ParamValueSerializedTypeMap['float'];
	'fxhash-ray1--transformPoints'?: ParamValueSerializedTypeMap['boolean'];
	'fxhash-ray1--transferFaceNormals'?: ParamValueSerializedTypeMap['boolean'];
	'fxhash-ray1--addDistAttribute'?: ParamValueSerializedTypeMap['boolean'];
	'fxhash-delete1--class'?: ParamValueSerializedTypeMap['integer'];
	'fxhash-delete1--invert'?: ParamValueSerializedTypeMap['boolean'];
	'fxhash-delete1--byObjectType'?: ParamValueSerializedTypeMap['boolean'];
	'fxhash-delete1--objectType'?: ParamValueSerializedTypeMap['integer'];
	'fxhash-delete1--byExpression'?: ParamValueSerializedTypeMap['boolean'];
	'fxhash-delete1--expression'?: ParamValueSerializedTypeMap['boolean'];
	'fxhash-delete1--byAttrib'?: ParamValueSerializedTypeMap['boolean'];
	'fxhash-delete1--attribType'?: ParamValueSerializedTypeMap['integer'];
	'fxhash-delete1--attribName'?: ParamValueSerializedTypeMap['string'];
	'fxhash-delete1--attribSize'?: ParamValueSerializedTypeMap['integer'];
	'fxhash-delete1--attribComparisonOperator'?: ParamValueSerializedTypeMap['integer'];
	'fxhash-delete1--attribValue1'?: ParamValueSerializedTypeMap['float'];
	'fxhash-delete1--attribValue2'?: ParamValueSerializedTypeMap['vector2'];
	'fxhash-delete1--attribValue2-attribValue2x'?: ParamValueSerializedTypeMap['float'];
	'fxhash-delete1--attribValue2-attribValue2y'?: ParamValueSerializedTypeMap['float'];
	'fxhash-delete1--attribValue2x'?: ParamValueSerializedTypeMap['float'];
	'fxhash-delete1--attribValue2y'?: ParamValueSerializedTypeMap['float'];
	'fxhash-delete1--attribValue3'?: ParamValueSerializedTypeMap['vector3'];
	'fxhash-delete1--attribValue3-attribValue3x'?: ParamValueSerializedTypeMap['float'];
	'fxhash-delete1--attribValue3-attribValue3y'?: ParamValueSerializedTypeMap['float'];
	'fxhash-delete1--attribValue3-attribValue3z'?: ParamValueSerializedTypeMap['float'];
	'fxhash-delete1--attribValue3x'?: ParamValueSerializedTypeMap['float'];
	'fxhash-delete1--attribValue3y'?: ParamValueSerializedTypeMap['float'];
	'fxhash-delete1--attribValue3z'?: ParamValueSerializedTypeMap['float'];
	'fxhash-delete1--attribValue4'?: ParamValueSerializedTypeMap['vector4'];
	'fxhash-delete1--attribValue4-attribValue4x'?: ParamValueSerializedTypeMap['float'];
	'fxhash-delete1--attribValue4-attribValue4y'?: ParamValueSerializedTypeMap['float'];
	'fxhash-delete1--attribValue4-attribValue4z'?: ParamValueSerializedTypeMap['float'];
	'fxhash-delete1--attribValue4-attribValue4w'?: ParamValueSerializedTypeMap['float'];
	'fxhash-delete1--attribValue4x'?: ParamValueSerializedTypeMap['float'];
	'fxhash-delete1--attribValue4y'?: ParamValueSerializedTypeMap['float'];
	'fxhash-delete1--attribValue4z'?: ParamValueSerializedTypeMap['float'];
	'fxhash-delete1--attribValue4w'?: ParamValueSerializedTypeMap['float'];
	'fxhash-delete1--attribString'?: ParamValueSerializedTypeMap['string'];
	'fxhash-delete1--byBbox'?: ParamValueSerializedTypeMap['boolean'];
	'fxhash-delete1--bboxSize'?: ParamValueSerializedTypeMap['vector3'];
	'fxhash-delete1--bboxSize-bboxSizex'?: ParamValueSerializedTypeMap['float'];
	'fxhash-delete1--bboxSize-bboxSizey'?: ParamValueSerializedTypeMap['float'];
	'fxhash-delete1--bboxSize-bboxSizez'?: ParamValueSerializedTypeMap['float'];
	'fxhash-delete1--bboxSizex'?: ParamValueSerializedTypeMap['float'];
	'fxhash-delete1--bboxSizey'?: ParamValueSerializedTypeMap['float'];
	'fxhash-delete1--bboxSizez'?: ParamValueSerializedTypeMap['float'];
	'fxhash-delete1--bboxCenter'?: ParamValueSerializedTypeMap['vector3'];
	'fxhash-delete1--bboxCenter-bboxCenterx'?: ParamValueSerializedTypeMap['float'];
	'fxhash-delete1--bboxCenter-bboxCentery'?: ParamValueSerializedTypeMap['float'];
	'fxhash-delete1--bboxCenter-bboxCenterz'?: ParamValueSerializedTypeMap['float'];
	'fxhash-delete1--bboxCenterx'?: ParamValueSerializedTypeMap['float'];
	'fxhash-delete1--bboxCentery'?: ParamValueSerializedTypeMap['float'];
	'fxhash-delete1--bboxCenterz'?: ParamValueSerializedTypeMap['float'];
	'fxhash-delete1--byBoundingObject'?: ParamValueSerializedTypeMap['boolean'];
	'fxhash-delete1--keepPoints'?: ParamValueSerializedTypeMap['boolean'];
	'fxhash-copy1--count'?: ParamValueSerializedTypeMap['integer'];
	'fxhash-copy1--t'?: ParamValueSerializedTypeMap['vector3'];
	'fxhash-copy1--t-tx'?: ParamValueSerializedTypeMap['float'];
	'fxhash-copy1--t-ty'?: ParamValueSerializedTypeMap['float'];
	'fxhash-copy1--t-tz'?: ParamValueSerializedTypeMap['float'];
	'fxhash-copy1--tx'?: ParamValueSerializedTypeMap['float'];
	'fxhash-copy1--ty'?: ParamValueSerializedTypeMap['float'];
	'fxhash-copy1--tz'?: ParamValueSerializedTypeMap['float'];
	'fxhash-copy1--r'?: ParamValueSerializedTypeMap['vector3'];
	'fxhash-copy1--r-rx'?: ParamValueSerializedTypeMap['float'];
	'fxhash-copy1--r-ry'?: ParamValueSerializedTypeMap['float'];
	'fxhash-copy1--r-rz'?: ParamValueSerializedTypeMap['float'];
	'fxhash-copy1--rx'?: ParamValueSerializedTypeMap['float'];
	'fxhash-copy1--ry'?: ParamValueSerializedTypeMap['float'];
	'fxhash-copy1--rz'?: ParamValueSerializedTypeMap['float'];
	'fxhash-copy1--s'?: ParamValueSerializedTypeMap['vector3'];
	'fxhash-copy1--s-sx'?: ParamValueSerializedTypeMap['float'];
	'fxhash-copy1--s-sy'?: ParamValueSerializedTypeMap['float'];
	'fxhash-copy1--s-sz'?: ParamValueSerializedTypeMap['float'];
	'fxhash-copy1--sx'?: ParamValueSerializedTypeMap['float'];
	'fxhash-copy1--sy'?: ParamValueSerializedTypeMap['float'];
	'fxhash-copy1--sz'?: ParamValueSerializedTypeMap['float'];
	'fxhash-copy1--scale'?: ParamValueSerializedTypeMap['float'];
	'fxhash-copy1--transformOnly'?: ParamValueSerializedTypeMap['boolean'];
	'fxhash-copy1--transformMode'?: ParamValueSerializedTypeMap['integer'];
	'fxhash-copy1--copyAttributes'?: ParamValueSerializedTypeMap['boolean'];
	'fxhash-copy1--attributesToCopy'?: ParamValueSerializedTypeMap['string'];
	'fxhash-copy1--useCopyExpr'?: ParamValueSerializedTypeMap['boolean'];
	'fxhash-transform4--applyOn'?: ParamValueSerializedTypeMap['integer'];
	'fxhash-transform4--objectMode'?: ParamValueSerializedTypeMap['integer'];
	'fxhash-transform4--group'?: ParamValueSerializedTypeMap['string'];
	'fxhash-transform4--rotationOrder'?: ParamValueSerializedTypeMap['integer'];
	'fxhash-transform4--t'?: ParamValueSerializedTypeMap['vector3'];
	'fxhash-transform4--t-tx'?: ParamValueSerializedTypeMap['float'];
	'fxhash-transform4--t-ty'?: ParamValueSerializedTypeMap['float'];
	'fxhash-transform4--t-tz'?: ParamValueSerializedTypeMap['float'];
	'fxhash-transform4--tx'?: ParamValueSerializedTypeMap['float'];
	'fxhash-transform4--ty'?: ParamValueSerializedTypeMap['float'];
	'fxhash-transform4--tz'?: ParamValueSerializedTypeMap['float'];
	'fxhash-transform4--r'?: ParamValueSerializedTypeMap['vector3'];
	'fxhash-transform4--r-rx'?: ParamValueSerializedTypeMap['float'];
	'fxhash-transform4--r-ry'?: ParamValueSerializedTypeMap['float'];
	'fxhash-transform4--r-rz'?: ParamValueSerializedTypeMap['float'];
	'fxhash-transform4--rx'?: ParamValueSerializedTypeMap['float'];
	'fxhash-transform4--ry'?: ParamValueSerializedTypeMap['float'];
	'fxhash-transform4--rz'?: ParamValueSerializedTypeMap['float'];
	'fxhash-transform4--s'?: ParamValueSerializedTypeMap['vector3'];
	'fxhash-transform4--s-sx'?: ParamValueSerializedTypeMap['float'];
	'fxhash-transform4--s-sy'?: ParamValueSerializedTypeMap['float'];
	'fxhash-transform4--s-sz'?: ParamValueSerializedTypeMap['float'];
	'fxhash-transform4--sx'?: ParamValueSerializedTypeMap['float'];
	'fxhash-transform4--sy'?: ParamValueSerializedTypeMap['float'];
	'fxhash-transform4--sz'?: ParamValueSerializedTypeMap['float'];
	'fxhash-transform4--scale'?: ParamValueSerializedTypeMap['float'];
	'fxhash-transform4--pivot'?: ParamValueSerializedTypeMap['vector3'];
	'fxhash-transform4--pivot-pivotx'?: ParamValueSerializedTypeMap['float'];
	'fxhash-transform4--pivot-pivoty'?: ParamValueSerializedTypeMap['float'];
	'fxhash-transform4--pivot-pivotz'?: ParamValueSerializedTypeMap['float'];
	'fxhash-transform4--pivotx'?: ParamValueSerializedTypeMap['float'];
	'fxhash-transform4--pivoty'?: ParamValueSerializedTypeMap['float'];
	'fxhash-transform4--pivotz'?: ParamValueSerializedTypeMap['float'];
	'fxhash-transform5--applyOn'?: ParamValueSerializedTypeMap['integer'];
	'fxhash-transform5--objectMode'?: ParamValueSerializedTypeMap['integer'];
	'fxhash-transform5--group'?: ParamValueSerializedTypeMap['string'];
	'fxhash-transform5--rotationOrder'?: ParamValueSerializedTypeMap['integer'];
	'fxhash-transform5--t'?: ParamValueSerializedTypeMap['vector3'];
	'fxhash-transform5--t-tx'?: ParamValueSerializedTypeMap['float'];
	'fxhash-transform5--t-ty'?: ParamValueSerializedTypeMap['float'];
	'fxhash-transform5--t-tz'?: ParamValueSerializedTypeMap['float'];
	'fxhash-transform5--tx'?: ParamValueSerializedTypeMap['float'];
	'fxhash-transform5--ty'?: ParamValueSerializedTypeMap['float'];
	'fxhash-transform5--tz'?: ParamValueSerializedTypeMap['float'];
	'fxhash-transform5--r'?: ParamValueSerializedTypeMap['vector3'];
	'fxhash-transform5--r-rx'?: ParamValueSerializedTypeMap['float'];
	'fxhash-transform5--r-ry'?: ParamValueSerializedTypeMap['float'];
	'fxhash-transform5--r-rz'?: ParamValueSerializedTypeMap['float'];
	'fxhash-transform5--rx'?: ParamValueSerializedTypeMap['float'];
	'fxhash-transform5--ry'?: ParamValueSerializedTypeMap['float'];
	'fxhash-transform5--rz'?: ParamValueSerializedTypeMap['float'];
	'fxhash-transform5--s'?: ParamValueSerializedTypeMap['vector3'];
	'fxhash-transform5--s-sx'?: ParamValueSerializedTypeMap['float'];
	'fxhash-transform5--s-sy'?: ParamValueSerializedTypeMap['float'];
	'fxhash-transform5--s-sz'?: ParamValueSerializedTypeMap['float'];
	'fxhash-transform5--sx'?: ParamValueSerializedTypeMap['float'];
	'fxhash-transform5--sy'?: ParamValueSerializedTypeMap['float'];
	'fxhash-transform5--sz'?: ParamValueSerializedTypeMap['float'];
	'fxhash-transform5--scale'?: ParamValueSerializedTypeMap['float'];
	'fxhash-transform5--pivot'?: ParamValueSerializedTypeMap['vector3'];
	'fxhash-transform5--pivot-pivotx'?: ParamValueSerializedTypeMap['float'];
	'fxhash-transform5--pivot-pivoty'?: ParamValueSerializedTypeMap['float'];
	'fxhash-transform5--pivot-pivotz'?: ParamValueSerializedTypeMap['float'];
	'fxhash-transform5--pivotx'?: ParamValueSerializedTypeMap['float'];
	'fxhash-transform5--pivoty'?: ParamValueSerializedTypeMap['float'];
	'fxhash-transform5--pivotz'?: ParamValueSerializedTypeMap['float'];
	'fxhash-transform2--applyOn'?: ParamValueSerializedTypeMap['integer'];
	'fxhash-transform2--objectMode'?: ParamValueSerializedTypeMap['integer'];
	'fxhash-transform2--group'?: ParamValueSerializedTypeMap['string'];
	'fxhash-transform2--rotationOrder'?: ParamValueSerializedTypeMap['integer'];
	'fxhash-transform2--t'?: ParamValueSerializedTypeMap['vector3'];
	'fxhash-transform2--t-tx'?: ParamValueSerializedTypeMap['float'];
	'fxhash-transform2--t-ty'?: ParamValueSerializedTypeMap['float'];
	'fxhash-transform2--t-tz'?: ParamValueSerializedTypeMap['float'];
	'fxhash-transform2--tx'?: ParamValueSerializedTypeMap['float'];
	'fxhash-transform2--ty'?: ParamValueSerializedTypeMap['float'];
	'fxhash-transform2--tz'?: ParamValueSerializedTypeMap['float'];
	'fxhash-transform2--r'?: ParamValueSerializedTypeMap['vector3'];
	'fxhash-transform2--r-rx'?: ParamValueSerializedTypeMap['float'];
	'fxhash-transform2--r-ry'?: ParamValueSerializedTypeMap['float'];
	'fxhash-transform2--r-rz'?: ParamValueSerializedTypeMap['float'];
	'fxhash-transform2--rx'?: ParamValueSerializedTypeMap['float'];
	'fxhash-transform2--ry'?: ParamValueSerializedTypeMap['float'];
	'fxhash-transform2--rz'?: ParamValueSerializedTypeMap['float'];
	'fxhash-transform2--s'?: ParamValueSerializedTypeMap['vector3'];
	'fxhash-transform2--s-sx'?: ParamValueSerializedTypeMap['float'];
	'fxhash-transform2--s-sy'?: ParamValueSerializedTypeMap['float'];
	'fxhash-transform2--s-sz'?: ParamValueSerializedTypeMap['float'];
	'fxhash-transform2--sx'?: ParamValueSerializedTypeMap['float'];
	'fxhash-transform2--sy'?: ParamValueSerializedTypeMap['float'];
	'fxhash-transform2--sz'?: ParamValueSerializedTypeMap['float'];
	'fxhash-transform2--scale'?: ParamValueSerializedTypeMap['float'];
	'fxhash-transform2--pivot'?: ParamValueSerializedTypeMap['vector3'];
	'fxhash-transform2--pivot-pivotx'?: ParamValueSerializedTypeMap['float'];
	'fxhash-transform2--pivot-pivoty'?: ParamValueSerializedTypeMap['float'];
	'fxhash-transform2--pivot-pivotz'?: ParamValueSerializedTypeMap['float'];
	'fxhash-transform2--pivotx'?: ParamValueSerializedTypeMap['float'];
	'fxhash-transform2--pivoty'?: ParamValueSerializedTypeMap['float'];
	'fxhash-transform2--pivotz'?: ParamValueSerializedTypeMap['float'];
	'fxhash-text_to2--font'?: ParamValueSerializedTypeMap['string'];
	'fxhash-text_to2--text'?: ParamValueSerializedTypeMap['string'];
	'fxhash-text_to2--type'?: ParamValueSerializedTypeMap['integer'];
	'fxhash-text_to2--size'?: ParamValueSerializedTypeMap['float'];
	'fxhash-text_to2--extrude'?: ParamValueSerializedTypeMap['float'];
	'fxhash-text_to2--segments'?: ParamValueSerializedTypeMap['integer'];
	'fxhash-text_to2--strokeWidth'?: ParamValueSerializedTypeMap['float'];
	'fxhash-text_to2--lineHeight'?: ParamValueSerializedTypeMap['float'];
	'fxhash-text_to2--justifyMode'?: ParamValueSerializedTypeMap['integer'];
	'fxhash-text_to2--splitPerLine'?: ParamValueSerializedTypeMap['boolean'];
	'fxhash-material1--group'?: ParamValueSerializedTypeMap['string'];
	'fxhash-material1--assignMat'?: ParamValueSerializedTypeMap['boolean'];
	'fxhash-material1--material'?: ParamValueSerializedTypeMap['node_path'];
	'fxhash-material1--applyToChildren'?: ParamValueSerializedTypeMap['boolean'];
	'fxhash-material1--cloneMat'?: ParamValueSerializedTypeMap['boolean'];
	'fxhash-material1--shareCustomUniforms'?: ParamValueSerializedTypeMap['boolean'];
	'fxhash-material1--swapCurrentTex'?: ParamValueSerializedTypeMap['boolean'];
	'fxhash-material1--texSrc0'?: ParamValueSerializedTypeMap['string'];
	'fxhash-material1--texDest0'?: ParamValueSerializedTypeMap['string'];
	'fxhash-noise1--amplitude'?: ParamValueSerializedTypeMap['float'];
	'fxhash-noise1--tamplitudeAttrib'?: ParamValueSerializedTypeMap['boolean'];
	'fxhash-noise1--amplitudeAttrib'?: ParamValueSerializedTypeMap['string'];
	'fxhash-noise1--freq'?: ParamValueSerializedTypeMap['vector3'];
	'fxhash-noise1--freq-freqx'?: ParamValueSerializedTypeMap['float'];
	'fxhash-noise1--freq-freqy'?: ParamValueSerializedTypeMap['float'];
	'fxhash-noise1--freq-freqz'?: ParamValueSerializedTypeMap['float'];
	'fxhash-noise1--freqx'?: ParamValueSerializedTypeMap['float'];
	'fxhash-noise1--freqy'?: ParamValueSerializedTypeMap['float'];
	'fxhash-noise1--freqz'?: ParamValueSerializedTypeMap['float'];
	'fxhash-noise1--offset'?: ParamValueSerializedTypeMap['vector3'];
	'fxhash-noise1--offset-offsetx'?: ParamValueSerializedTypeMap['float'];
	'fxhash-noise1--offset-offsety'?: ParamValueSerializedTypeMap['float'];
	'fxhash-noise1--offset-offsetz'?: ParamValueSerializedTypeMap['float'];
	'fxhash-noise1--offsetx'?: ParamValueSerializedTypeMap['float'];
	'fxhash-noise1--offsety'?: ParamValueSerializedTypeMap['float'];
	'fxhash-noise1--offsetz'?: ParamValueSerializedTypeMap['float'];
	'fxhash-noise1--octaves'?: ParamValueSerializedTypeMap['integer'];
	'fxhash-noise1--ampAttenuation'?: ParamValueSerializedTypeMap['float'];
	'fxhash-noise1--freqIncrease'?: ParamValueSerializedTypeMap['float'];
	'fxhash-noise1--seed'?: ParamValueSerializedTypeMap['integer'];
	'fxhash-noise1--useNormals'?: ParamValueSerializedTypeMap['boolean'];
	'fxhash-noise1--attribName'?: ParamValueSerializedTypeMap['string'];
	'fxhash-noise1--useRestAttributes'?: ParamValueSerializedTypeMap['boolean'];
	'fxhash-noise1--restP'?: ParamValueSerializedTypeMap['string'];
	'fxhash-noise1--restN'?: ParamValueSerializedTypeMap['string'];
	'fxhash-noise1--operation'?: ParamValueSerializedTypeMap['integer'];
	'fxhash-noise1--computeNormals'?: ParamValueSerializedTypeMap['boolean'];
	'fxhash-attribCreate1--group'?: ParamValueSerializedTypeMap['string'];
	'fxhash-attribCreate1--class'?: ParamValueSerializedTypeMap['integer'];
	'fxhash-attribCreate1--type'?: ParamValueSerializedTypeMap['integer'];
	'fxhash-attribCreate1--name'?: ParamValueSerializedTypeMap['string'];
	'fxhash-attribCreate1--size'?: ParamValueSerializedTypeMap['integer'];
	'fxhash-attribCreate1--value1'?: ParamValueSerializedTypeMap['float'];
	'fxhash-attribCreate1--value2'?: ParamValueSerializedTypeMap['vector2'];
	'fxhash-attribCreate1--value2-value2x'?: ParamValueSerializedTypeMap['float'];
	'fxhash-attribCreate1--value2-value2y'?: ParamValueSerializedTypeMap['float'];
	'fxhash-attribCreate1--value2x'?: ParamValueSerializedTypeMap['float'];
	'fxhash-attribCreate1--value2y'?: ParamValueSerializedTypeMap['float'];
	'fxhash-attribCreate1--value3'?: ParamValueSerializedTypeMap['vector3'];
	'fxhash-attribCreate1--value3-value3x'?: ParamValueSerializedTypeMap['float'];
	'fxhash-attribCreate1--value3-value3y'?: ParamValueSerializedTypeMap['float'];
	'fxhash-attribCreate1--value3-value3z'?: ParamValueSerializedTypeMap['float'];
	'fxhash-attribCreate1--value3x'?: ParamValueSerializedTypeMap['float'];
	'fxhash-attribCreate1--value3y'?: ParamValueSerializedTypeMap['float'];
	'fxhash-attribCreate1--value3z'?: ParamValueSerializedTypeMap['float'];
	'fxhash-attribCreate1--value4'?: ParamValueSerializedTypeMap['vector4'];
	'fxhash-attribCreate1--value4-value4x'?: ParamValueSerializedTypeMap['float'];
	'fxhash-attribCreate1--value4-value4y'?: ParamValueSerializedTypeMap['float'];
	'fxhash-attribCreate1--value4-value4z'?: ParamValueSerializedTypeMap['float'];
	'fxhash-attribCreate1--value4-value4w'?: ParamValueSerializedTypeMap['float'];
	'fxhash-attribCreate1--value4x'?: ParamValueSerializedTypeMap['float'];
	'fxhash-attribCreate1--value4y'?: ParamValueSerializedTypeMap['float'];
	'fxhash-attribCreate1--value4z'?: ParamValueSerializedTypeMap['float'];
	'fxhash-attribCreate1--value4w'?: ParamValueSerializedTypeMap['float'];
	'fxhash-attribCreate1--string'?: ParamValueSerializedTypeMap['string'];
	'fxhash-attribCreate2--group'?: ParamValueSerializedTypeMap['string'];
	'fxhash-attribCreate2--class'?: ParamValueSerializedTypeMap['integer'];
	'fxhash-attribCreate2--type'?: ParamValueSerializedTypeMap['integer'];
	'fxhash-attribCreate2--name'?: ParamValueSerializedTypeMap['string'];
	'fxhash-attribCreate2--size'?: ParamValueSerializedTypeMap['integer'];
	'fxhash-attribCreate2--value1'?: ParamValueSerializedTypeMap['float'];
	'fxhash-attribCreate2--value2'?: ParamValueSerializedTypeMap['vector2'];
	'fxhash-attribCreate2--value2-value2x'?: ParamValueSerializedTypeMap['float'];
	'fxhash-attribCreate2--value2-value2y'?: ParamValueSerializedTypeMap['float'];
	'fxhash-attribCreate2--value2x'?: ParamValueSerializedTypeMap['float'];
	'fxhash-attribCreate2--value2y'?: ParamValueSerializedTypeMap['float'];
	'fxhash-attribCreate2--value3'?: ParamValueSerializedTypeMap['vector3'];
	'fxhash-attribCreate2--value3-value3x'?: ParamValueSerializedTypeMap['float'];
	'fxhash-attribCreate2--value3-value3y'?: ParamValueSerializedTypeMap['float'];
	'fxhash-attribCreate2--value3-value3z'?: ParamValueSerializedTypeMap['float'];
	'fxhash-attribCreate2--value3x'?: ParamValueSerializedTypeMap['float'];
	'fxhash-attribCreate2--value3y'?: ParamValueSerializedTypeMap['float'];
	'fxhash-attribCreate2--value3z'?: ParamValueSerializedTypeMap['float'];
	'fxhash-attribCreate2--value4'?: ParamValueSerializedTypeMap['vector4'];
	'fxhash-attribCreate2--value4-value4x'?: ParamValueSerializedTypeMap['float'];
	'fxhash-attribCreate2--value4-value4y'?: ParamValueSerializedTypeMap['float'];
	'fxhash-attribCreate2--value4-value4z'?: ParamValueSerializedTypeMap['float'];
	'fxhash-attribCreate2--value4-value4w'?: ParamValueSerializedTypeMap['float'];
	'fxhash-attribCreate2--value4x'?: ParamValueSerializedTypeMap['float'];
	'fxhash-attribCreate2--value4y'?: ParamValueSerializedTypeMap['float'];
	'fxhash-attribCreate2--value4z'?: ParamValueSerializedTypeMap['float'];
	'fxhash-attribCreate2--value4w'?: ParamValueSerializedTypeMap['float'];
	'fxhash-attribCreate2--string'?: ParamValueSerializedTypeMap['string'];
	'fxhash-switch1--input'?: ParamValueSerializedTypeMap['integer'];
	'fxhash-material2--group'?: ParamValueSerializedTypeMap['string'];
	'fxhash-material2--assignMat'?: ParamValueSerializedTypeMap['boolean'];
	'fxhash-material2--material'?: ParamValueSerializedTypeMap['node_path'];
	'fxhash-material2--applyToChildren'?: ParamValueSerializedTypeMap['boolean'];
	'fxhash-material2--cloneMat'?: ParamValueSerializedTypeMap['boolean'];
	'fxhash-material2--shareCustomUniforms'?: ParamValueSerializedTypeMap['boolean'];
	'fxhash-material2--swapCurrentTex'?: ParamValueSerializedTypeMap['boolean'];
	'fxhash-material2--texSrc0'?: ParamValueSerializedTypeMap['string'];
	'fxhash-material2--texDest0'?: ParamValueSerializedTypeMap['string'];
	'fxhash-material3--group'?: ParamValueSerializedTypeMap['string'];
	'fxhash-material3--assignMat'?: ParamValueSerializedTypeMap['boolean'];
	'fxhash-material3--material'?: ParamValueSerializedTypeMap['node_path'];
	'fxhash-material3--applyToChildren'?: ParamValueSerializedTypeMap['boolean'];
	'fxhash-material3--cloneMat'?: ParamValueSerializedTypeMap['boolean'];
	'fxhash-material3--shareCustomUniforms'?: ParamValueSerializedTypeMap['boolean'];
	'fxhash-material3--swapCurrentTex'?: ParamValueSerializedTypeMap['boolean'];
	'fxhash-material3--texSrc0'?: ParamValueSerializedTypeMap['string'];
	'fxhash-material3--texDest0'?: ParamValueSerializedTypeMap['string'];
	'fxhash-roundedBox1--size'?: ParamValueSerializedTypeMap['float'];
	'fxhash-roundedBox1--sizes'?: ParamValueSerializedTypeMap['vector3'];
	'fxhash-roundedBox1--sizes-sizesx'?: ParamValueSerializedTypeMap['float'];
	'fxhash-roundedBox1--sizes-sizesy'?: ParamValueSerializedTypeMap['float'];
	'fxhash-roundedBox1--sizes-sizesz'?: ParamValueSerializedTypeMap['float'];
	'fxhash-roundedBox1--sizesx'?: ParamValueSerializedTypeMap['float'];
	'fxhash-roundedBox1--sizesy'?: ParamValueSerializedTypeMap['float'];
	'fxhash-roundedBox1--sizesz'?: ParamValueSerializedTypeMap['float'];
	'fxhash-roundedBox1--divisions'?: ParamValueSerializedTypeMap['integer'];
	'fxhash-roundedBox1--bevel'?: ParamValueSerializedTypeMap['float'];
	'fxhash-roundedBox1--center'?: ParamValueSerializedTypeMap['vector3'];
	'fxhash-roundedBox1--center-centerx'?: ParamValueSerializedTypeMap['float'];
	'fxhash-roundedBox1--center-centery'?: ParamValueSerializedTypeMap['float'];
	'fxhash-roundedBox1--center-centerz'?: ParamValueSerializedTypeMap['float'];
	'fxhash-roundedBox1--centerx'?: ParamValueSerializedTypeMap['float'];
	'fxhash-roundedBox1--centery'?: ParamValueSerializedTypeMap['float'];
	'fxhash-roundedBox1--centerz'?: ParamValueSerializedTypeMap['float'];
	'fxhash-transform6--applyOn'?: ParamValueSerializedTypeMap['integer'];
	'fxhash-transform6--objectMode'?: ParamValueSerializedTypeMap['integer'];
	'fxhash-transform6--group'?: ParamValueSerializedTypeMap['string'];
	'fxhash-transform6--rotationOrder'?: ParamValueSerializedTypeMap['integer'];
	'fxhash-transform6--t'?: ParamValueSerializedTypeMap['vector3'];
	'fxhash-transform6--t-tx'?: ParamValueSerializedTypeMap['float'];
	'fxhash-transform6--t-ty'?: ParamValueSerializedTypeMap['float'];
	'fxhash-transform6--t-tz'?: ParamValueSerializedTypeMap['float'];
	'fxhash-transform6--tx'?: ParamValueSerializedTypeMap['float'];
	'fxhash-transform6--ty'?: ParamValueSerializedTypeMap['float'];
	'fxhash-transform6--tz'?: ParamValueSerializedTypeMap['float'];
	'fxhash-transform6--r'?: ParamValueSerializedTypeMap['vector3'];
	'fxhash-transform6--r-rx'?: ParamValueSerializedTypeMap['float'];
	'fxhash-transform6--r-ry'?: ParamValueSerializedTypeMap['float'];
	'fxhash-transform6--r-rz'?: ParamValueSerializedTypeMap['float'];
	'fxhash-transform6--rx'?: ParamValueSerializedTypeMap['float'];
	'fxhash-transform6--ry'?: ParamValueSerializedTypeMap['float'];
	'fxhash-transform6--rz'?: ParamValueSerializedTypeMap['float'];
	'fxhash-transform6--s'?: ParamValueSerializedTypeMap['vector3'];
	'fxhash-transform6--s-sx'?: ParamValueSerializedTypeMap['float'];
	'fxhash-transform6--s-sy'?: ParamValueSerializedTypeMap['float'];
	'fxhash-transform6--s-sz'?: ParamValueSerializedTypeMap['float'];
	'fxhash-transform6--sx'?: ParamValueSerializedTypeMap['float'];
	'fxhash-transform6--sy'?: ParamValueSerializedTypeMap['float'];
	'fxhash-transform6--sz'?: ParamValueSerializedTypeMap['float'];
	'fxhash-transform6--scale'?: ParamValueSerializedTypeMap['float'];
	'fxhash-transform6--pivot'?: ParamValueSerializedTypeMap['vector3'];
	'fxhash-transform6--pivot-pivotx'?: ParamValueSerializedTypeMap['float'];
	'fxhash-transform6--pivot-pivoty'?: ParamValueSerializedTypeMap['float'];
	'fxhash-transform6--pivot-pivotz'?: ParamValueSerializedTypeMap['float'];
	'fxhash-transform6--pivotx'?: ParamValueSerializedTypeMap['float'];
	'fxhash-transform6--pivoty'?: ParamValueSerializedTypeMap['float'];
	'fxhash-transform6--pivotz'?: ParamValueSerializedTypeMap['float'];
	'fxhash-restAttributes1--tposition'?: ParamValueSerializedTypeMap['boolean'];
	'fxhash-restAttributes1--position'?: ParamValueSerializedTypeMap['string'];
	'fxhash-restAttributes1--restP'?: ParamValueSerializedTypeMap['string'];
	'fxhash-restAttributes1--tnormal'?: ParamValueSerializedTypeMap['boolean'];
	'fxhash-restAttributes1--normal'?: ParamValueSerializedTypeMap['string'];
	'fxhash-restAttributes1--restN'?: ParamValueSerializedTypeMap['string'];
	'fxhash-attribPromote1--classFrom'?: ParamValueSerializedTypeMap['integer'];
	'fxhash-attribPromote1--classTo'?: ParamValueSerializedTypeMap['integer'];
	'fxhash-attribPromote1--mode'?: ParamValueSerializedTypeMap['integer'];
	'fxhash-attribPromote1--name'?: ParamValueSerializedTypeMap['string'];
	'fxhash-actor1--useThisNode'?: ParamValueSerializedTypeMap['boolean'];
	'fxhash-actor1--node'?: ParamValueSerializedTypeMap['node_path'];
	'fxhash-actor1-plane1--normal'?: ParamValueSerializedTypeMap['vector3'];
	'fxhash-actor1-plane1--normal-normalx'?: ParamValueSerializedTypeMap['float'];
	'fxhash-actor1-plane1--normal-normaly'?: ParamValueSerializedTypeMap['float'];
	'fxhash-actor1-plane1--normal-normalz'?: ParamValueSerializedTypeMap['float'];
	'fxhash-actor1-plane1--normalx'?: ParamValueSerializedTypeMap['float'];
	'fxhash-actor1-plane1--normaly'?: ParamValueSerializedTypeMap['float'];
	'fxhash-actor1-plane1--normalz'?: ParamValueSerializedTypeMap['float'];
	'fxhash-actor1-plane1--constant'?: ParamValueSerializedTypeMap['float'];
	'fxhash-actor1-distance1--v0'?: ParamValueSerializedTypeMap['vector3'];
	'fxhash-actor1-distance1--v0-v0x'?: ParamValueSerializedTypeMap['float'];
	'fxhash-actor1-distance1--v0-v0y'?: ParamValueSerializedTypeMap['float'];
	'fxhash-actor1-distance1--v0-v0z'?: ParamValueSerializedTypeMap['float'];
	'fxhash-actor1-distance1--v0x'?: ParamValueSerializedTypeMap['float'];
	'fxhash-actor1-distance1--v0y'?: ParamValueSerializedTypeMap['float'];
	'fxhash-actor1-distance1--v0z'?: ParamValueSerializedTypeMap['float'];
	'fxhash-actor1-distance1--v1'?: ParamValueSerializedTypeMap['vector3'];
	'fxhash-actor1-distance1--v1-v1x'?: ParamValueSerializedTypeMap['float'];
	'fxhash-actor1-distance1--v1-v1y'?: ParamValueSerializedTypeMap['float'];
	'fxhash-actor1-distance1--v1-v1z'?: ParamValueSerializedTypeMap['float'];
	'fxhash-actor1-distance1--v1x'?: ParamValueSerializedTypeMap['float'];
	'fxhash-actor1-distance1--v1y'?: ParamValueSerializedTypeMap['float'];
	'fxhash-actor1-distance1--v1z'?: ParamValueSerializedTypeMap['float'];
	'fxhash-actor1-clamp1--value'?: ParamValueSerializedTypeMap['float'];
	'fxhash-actor1-clamp1--min'?: ParamValueSerializedTypeMap['float'];
	'fxhash-actor1-clamp1--max'?: ParamValueSerializedTypeMap['float'];
	'fxhash-actor1-complement1--value'?: ParamValueSerializedTypeMap['float'];
	'fxhash-actor1-vec3ToFloat1--vec3'?: ParamValueSerializedTypeMap['vector3'];
	'fxhash-actor1-vec3ToFloat1--vec3-vec3x'?: ParamValueSerializedTypeMap['float'];
	'fxhash-actor1-vec3ToFloat1--vec3-vec3y'?: ParamValueSerializedTypeMap['float'];
	'fxhash-actor1-vec3ToFloat1--vec3-vec3z'?: ParamValueSerializedTypeMap['float'];
	'fxhash-actor1-vec3ToFloat1--vec3x'?: ParamValueSerializedTypeMap['float'];
	'fxhash-actor1-vec3ToFloat1--vec3y'?: ParamValueSerializedTypeMap['float'];
	'fxhash-actor1-vec3ToFloat1--vec3z'?: ParamValueSerializedTypeMap['float'];
	'fxhash-actor1-floatToVec3_1--x'?: ParamValueSerializedTypeMap['float'];
	'fxhash-actor1-floatToVec3_1--y'?: ParamValueSerializedTypeMap['float'];
	'fxhash-actor1-floatToVec3_1--z'?: ParamValueSerializedTypeMap['float'];
	'fxhash-actor1-setObjectPosition1--position'?: ParamValueSerializedTypeMap['vector3'];
	'fxhash-actor1-setObjectPosition1--position-positionx'?: ParamValueSerializedTypeMap['float'];
	'fxhash-actor1-setObjectPosition1--position-positiony'?: ParamValueSerializedTypeMap['float'];
	'fxhash-actor1-setObjectPosition1--position-positionz'?: ParamValueSerializedTypeMap['float'];
	'fxhash-actor1-setObjectPosition1--positionx'?: ParamValueSerializedTypeMap['float'];
	'fxhash-actor1-setObjectPosition1--positiony'?: ParamValueSerializedTypeMap['float'];
	'fxhash-actor1-setObjectPosition1--positionz'?: ParamValueSerializedTypeMap['float'];
	'fxhash-actor1-setObjectPosition1--lerp'?: ParamValueSerializedTypeMap['float'];
	'fxhash-actor1-setObjectPosition1--updateMatrix'?: ParamValueSerializedTypeMap['boolean'];
	'fxhash-actor1-getObjectAttribute1--attribName'?: ParamValueSerializedTypeMap['string'];
	'fxhash-actor1-getObjectAttribute1--type'?: ParamValueSerializedTypeMap['integer'];
	'fxhash-MAT-meshStandard1--default'?: ParamValueSerializedTypeMap['folder'];
	'fxhash-MAT-meshStandard1--color'?: ParamValueSerializedTypeMap['color'];
	'fxhash-MAT-meshStandard1--color-colorr'?: ParamValueSerializedTypeMap['float'];
	'fxhash-MAT-meshStandard1--color-colorg'?: ParamValueSerializedTypeMap['float'];
	'fxhash-MAT-meshStandard1--color-colorb'?: ParamValueSerializedTypeMap['float'];
	'fxhash-MAT-meshStandard1--colorr'?: ParamValueSerializedTypeMap['float'];
	'fxhash-MAT-meshStandard1--colorg'?: ParamValueSerializedTypeMap['float'];
	'fxhash-MAT-meshStandard1--colorb'?: ParamValueSerializedTypeMap['float'];
	'fxhash-MAT-meshStandard1--useVertexColors'?: ParamValueSerializedTypeMap['boolean'];
	'fxhash-MAT-meshStandard1--transparent'?: ParamValueSerializedTypeMap['boolean'];
	'fxhash-MAT-meshStandard1--opacity'?: ParamValueSerializedTypeMap['float'];
	'fxhash-MAT-meshStandard1--alphaTest'?: ParamValueSerializedTypeMap['float'];
	'fxhash-MAT-meshStandard1--textures'?: ParamValueSerializedTypeMap['folder'];
	'fxhash-MAT-meshStandard1--useMap'?: ParamValueSerializedTypeMap['boolean'];
	'fxhash-MAT-meshStandard1--map'?: ParamValueSerializedTypeMap['node_path'];
	'fxhash-MAT-meshStandard1--useAlphaMap'?: ParamValueSerializedTypeMap['boolean'];
	'fxhash-MAT-meshStandard1--alphaMap'?: ParamValueSerializedTypeMap['node_path'];
	'fxhash-MAT-meshStandard1--useAOMap'?: ParamValueSerializedTypeMap['boolean'];
	'fxhash-MAT-meshStandard1--aoMap'?: ParamValueSerializedTypeMap['node_path'];
	'fxhash-MAT-meshStandard1--aoMapIntensity'?: ParamValueSerializedTypeMap['float'];
	'fxhash-MAT-meshStandard1--useBumpMap'?: ParamValueSerializedTypeMap['boolean'];
	'fxhash-MAT-meshStandard1--bumpMap'?: ParamValueSerializedTypeMap['node_path'];
	'fxhash-MAT-meshStandard1--bumpScale'?: ParamValueSerializedTypeMap['float'];
	'fxhash-MAT-meshStandard1--bumpBias'?: ParamValueSerializedTypeMap['float'];
	'fxhash-MAT-meshStandard1--useDisplacementMap'?: ParamValueSerializedTypeMap['boolean'];
	'fxhash-MAT-meshStandard1--displacementMap'?: ParamValueSerializedTypeMap['node_path'];
	'fxhash-MAT-meshStandard1--displacementScale'?: ParamValueSerializedTypeMap['float'];
	'fxhash-MAT-meshStandard1--displacementBias'?: ParamValueSerializedTypeMap['float'];
	'fxhash-MAT-meshStandard1--emissive'?: ParamValueSerializedTypeMap['color'];
	'fxhash-MAT-meshStandard1--emissive-emissiver'?: ParamValueSerializedTypeMap['float'];
	'fxhash-MAT-meshStandard1--emissive-emissiveg'?: ParamValueSerializedTypeMap['float'];
	'fxhash-MAT-meshStandard1--emissive-emissiveb'?: ParamValueSerializedTypeMap['float'];
	'fxhash-MAT-meshStandard1--emissiver'?: ParamValueSerializedTypeMap['float'];
	'fxhash-MAT-meshStandard1--emissiveg'?: ParamValueSerializedTypeMap['float'];
	'fxhash-MAT-meshStandard1--emissiveb'?: ParamValueSerializedTypeMap['float'];
	'fxhash-MAT-meshStandard1--useEmissiveMap'?: ParamValueSerializedTypeMap['boolean'];
	'fxhash-MAT-meshStandard1--emissiveMap'?: ParamValueSerializedTypeMap['node_path'];
	'fxhash-MAT-meshStandard1--emissiveIntensity'?: ParamValueSerializedTypeMap['float'];
	'fxhash-MAT-meshStandard1--useEnvMap'?: ParamValueSerializedTypeMap['boolean'];
	'fxhash-MAT-meshStandard1--envMap'?: ParamValueSerializedTypeMap['node_path'];
	'fxhash-MAT-meshStandard1--envMapIntensity'?: ParamValueSerializedTypeMap['float'];
	'fxhash-MAT-meshStandard1--useLightMap'?: ParamValueSerializedTypeMap['boolean'];
	'fxhash-MAT-meshStandard1--lightMap'?: ParamValueSerializedTypeMap['node_path'];
	'fxhash-MAT-meshStandard1--lightMapIntensity'?: ParamValueSerializedTypeMap['float'];
	'fxhash-MAT-meshStandard1--useNormalMap'?: ParamValueSerializedTypeMap['boolean'];
	'fxhash-MAT-meshStandard1--normalMap'?: ParamValueSerializedTypeMap['node_path'];
	'fxhash-MAT-meshStandard1--normalMapType'?: ParamValueSerializedTypeMap['integer'];
	'fxhash-MAT-meshStandard1--normalScale'?: ParamValueSerializedTypeMap['vector2'];
	'fxhash-MAT-meshStandard1--normalScale-normalScalex'?: ParamValueSerializedTypeMap['float'];
	'fxhash-MAT-meshStandard1--normalScale-normalScaley'?: ParamValueSerializedTypeMap['float'];
	'fxhash-MAT-meshStandard1--normalScalex'?: ParamValueSerializedTypeMap['float'];
	'fxhash-MAT-meshStandard1--normalScaley'?: ParamValueSerializedTypeMap['float'];
	'fxhash-MAT-meshStandard1--normalScaleMult'?: ParamValueSerializedTypeMap['float'];
	'fxhash-MAT-meshStandard1--useMetalnessMap'?: ParamValueSerializedTypeMap['boolean'];
	'fxhash-MAT-meshStandard1--metalnessMap'?: ParamValueSerializedTypeMap['node_path'];
	'fxhash-MAT-meshStandard1--metalness'?: ParamValueSerializedTypeMap['float'];
	'fxhash-MAT-meshStandard1--useRoughnessMap'?: ParamValueSerializedTypeMap['boolean'];
	'fxhash-MAT-meshStandard1--roughnessMap'?: ParamValueSerializedTypeMap['node_path'];
	'fxhash-MAT-meshStandard1--roughness'?: ParamValueSerializedTypeMap['float'];
	'fxhash-MAT-meshStandard1--advanced'?: ParamValueSerializedTypeMap['folder'];
	'fxhash-MAT-meshStandard1--doubleSided'?: ParamValueSerializedTypeMap['boolean'];
	'fxhash-MAT-meshStandard1--front'?: ParamValueSerializedTypeMap['boolean'];
	'fxhash-MAT-meshStandard1--overrideShadowSide'?: ParamValueSerializedTypeMap['boolean'];
	'fxhash-MAT-meshStandard1--shadowDoubleSided'?: ParamValueSerializedTypeMap['boolean'];
	'fxhash-MAT-meshStandard1--shadowFront'?: ParamValueSerializedTypeMap['boolean'];
	'fxhash-MAT-meshStandard1--colorWrite'?: ParamValueSerializedTypeMap['boolean'];
	'fxhash-MAT-meshStandard1--depthWrite'?: ParamValueSerializedTypeMap['boolean'];
	'fxhash-MAT-meshStandard1--depthTest'?: ParamValueSerializedTypeMap['boolean'];
	'fxhash-MAT-meshStandard1--premultipliedAlpha'?: ParamValueSerializedTypeMap['boolean'];
	'fxhash-MAT-meshStandard1--blending'?: ParamValueSerializedTypeMap['integer'];
	'fxhash-MAT-meshStandard1--dithering'?: ParamValueSerializedTypeMap['boolean'];
	'fxhash-MAT-meshStandard1--polygonOffset'?: ParamValueSerializedTypeMap['boolean'];
	'fxhash-MAT-meshStandard1--polygonOffsetFactor'?: ParamValueSerializedTypeMap['integer'];
	'fxhash-MAT-meshStandard1--polygonOffsetUnits'?: ParamValueSerializedTypeMap['integer'];
	'fxhash-MAT-meshStandard1--wireframe'?: ParamValueSerializedTypeMap['boolean'];
	'fxhash-MAT-meshStandard1--wireframeLinewidth'?: ParamValueSerializedTypeMap['float'];
	'fxhash-MAT-meshStandard1--wireframeLinecap'?: ParamValueSerializedTypeMap['integer'];
	'fxhash-MAT-meshStandard1--wireframeLinejoin'?: ParamValueSerializedTypeMap['integer'];
	'fxhash-MAT-meshStandard1--useFog'?: ParamValueSerializedTypeMap['boolean'];
	'fxhash-MAT-meshStandard2--default'?: ParamValueSerializedTypeMap['folder'];
	'fxhash-MAT-meshStandard2--color'?: ParamValueSerializedTypeMap['color'];
	'fxhash-MAT-meshStandard2--color-colorr'?: ParamValueSerializedTypeMap['float'];
	'fxhash-MAT-meshStandard2--color-colorg'?: ParamValueSerializedTypeMap['float'];
	'fxhash-MAT-meshStandard2--color-colorb'?: ParamValueSerializedTypeMap['float'];
	'fxhash-MAT-meshStandard2--colorr'?: ParamValueSerializedTypeMap['float'];
	'fxhash-MAT-meshStandard2--colorg'?: ParamValueSerializedTypeMap['float'];
	'fxhash-MAT-meshStandard2--colorb'?: ParamValueSerializedTypeMap['float'];
	'fxhash-MAT-meshStandard2--useVertexColors'?: ParamValueSerializedTypeMap['boolean'];
	'fxhash-MAT-meshStandard2--transparent'?: ParamValueSerializedTypeMap['boolean'];
	'fxhash-MAT-meshStandard2--opacity'?: ParamValueSerializedTypeMap['float'];
	'fxhash-MAT-meshStandard2--alphaTest'?: ParamValueSerializedTypeMap['float'];
	'fxhash-MAT-meshStandard2--textures'?: ParamValueSerializedTypeMap['folder'];
	'fxhash-MAT-meshStandard2--useMap'?: ParamValueSerializedTypeMap['boolean'];
	'fxhash-MAT-meshStandard2--map'?: ParamValueSerializedTypeMap['node_path'];
	'fxhash-MAT-meshStandard2--useAlphaMap'?: ParamValueSerializedTypeMap['boolean'];
	'fxhash-MAT-meshStandard2--alphaMap'?: ParamValueSerializedTypeMap['node_path'];
	'fxhash-MAT-meshStandard2--useAOMap'?: ParamValueSerializedTypeMap['boolean'];
	'fxhash-MAT-meshStandard2--aoMap'?: ParamValueSerializedTypeMap['node_path'];
	'fxhash-MAT-meshStandard2--aoMapIntensity'?: ParamValueSerializedTypeMap['float'];
	'fxhash-MAT-meshStandard2--useBumpMap'?: ParamValueSerializedTypeMap['boolean'];
	'fxhash-MAT-meshStandard2--bumpMap'?: ParamValueSerializedTypeMap['node_path'];
	'fxhash-MAT-meshStandard2--bumpScale'?: ParamValueSerializedTypeMap['float'];
	'fxhash-MAT-meshStandard2--bumpBias'?: ParamValueSerializedTypeMap['float'];
	'fxhash-MAT-meshStandard2--useDisplacementMap'?: ParamValueSerializedTypeMap['boolean'];
	'fxhash-MAT-meshStandard2--displacementMap'?: ParamValueSerializedTypeMap['node_path'];
	'fxhash-MAT-meshStandard2--displacementScale'?: ParamValueSerializedTypeMap['float'];
	'fxhash-MAT-meshStandard2--displacementBias'?: ParamValueSerializedTypeMap['float'];
	'fxhash-MAT-meshStandard2--emissive'?: ParamValueSerializedTypeMap['color'];
	'fxhash-MAT-meshStandard2--emissive-emissiver'?: ParamValueSerializedTypeMap['float'];
	'fxhash-MAT-meshStandard2--emissive-emissiveg'?: ParamValueSerializedTypeMap['float'];
	'fxhash-MAT-meshStandard2--emissive-emissiveb'?: ParamValueSerializedTypeMap['float'];
	'fxhash-MAT-meshStandard2--emissiver'?: ParamValueSerializedTypeMap['float'];
	'fxhash-MAT-meshStandard2--emissiveg'?: ParamValueSerializedTypeMap['float'];
	'fxhash-MAT-meshStandard2--emissiveb'?: ParamValueSerializedTypeMap['float'];
	'fxhash-MAT-meshStandard2--useEmissiveMap'?: ParamValueSerializedTypeMap['boolean'];
	'fxhash-MAT-meshStandard2--emissiveMap'?: ParamValueSerializedTypeMap['node_path'];
	'fxhash-MAT-meshStandard2--emissiveIntensity'?: ParamValueSerializedTypeMap['float'];
	'fxhash-MAT-meshStandard2--useEnvMap'?: ParamValueSerializedTypeMap['boolean'];
	'fxhash-MAT-meshStandard2--envMap'?: ParamValueSerializedTypeMap['node_path'];
	'fxhash-MAT-meshStandard2--envMapIntensity'?: ParamValueSerializedTypeMap['float'];
	'fxhash-MAT-meshStandard2--useLightMap'?: ParamValueSerializedTypeMap['boolean'];
	'fxhash-MAT-meshStandard2--lightMap'?: ParamValueSerializedTypeMap['node_path'];
	'fxhash-MAT-meshStandard2--lightMapIntensity'?: ParamValueSerializedTypeMap['float'];
	'fxhash-MAT-meshStandard2--useNormalMap'?: ParamValueSerializedTypeMap['boolean'];
	'fxhash-MAT-meshStandard2--normalMap'?: ParamValueSerializedTypeMap['node_path'];
	'fxhash-MAT-meshStandard2--normalMapType'?: ParamValueSerializedTypeMap['integer'];
	'fxhash-MAT-meshStandard2--normalScale'?: ParamValueSerializedTypeMap['vector2'];
	'fxhash-MAT-meshStandard2--normalScale-normalScalex'?: ParamValueSerializedTypeMap['float'];
	'fxhash-MAT-meshStandard2--normalScale-normalScaley'?: ParamValueSerializedTypeMap['float'];
	'fxhash-MAT-meshStandard2--normalScalex'?: ParamValueSerializedTypeMap['float'];
	'fxhash-MAT-meshStandard2--normalScaley'?: ParamValueSerializedTypeMap['float'];
	'fxhash-MAT-meshStandard2--normalScaleMult'?: ParamValueSerializedTypeMap['float'];
	'fxhash-MAT-meshStandard2--useMetalnessMap'?: ParamValueSerializedTypeMap['boolean'];
	'fxhash-MAT-meshStandard2--metalnessMap'?: ParamValueSerializedTypeMap['node_path'];
	'fxhash-MAT-meshStandard2--metalness'?: ParamValueSerializedTypeMap['float'];
	'fxhash-MAT-meshStandard2--useRoughnessMap'?: ParamValueSerializedTypeMap['boolean'];
	'fxhash-MAT-meshStandard2--roughnessMap'?: ParamValueSerializedTypeMap['node_path'];
	'fxhash-MAT-meshStandard2--roughness'?: ParamValueSerializedTypeMap['float'];
	'fxhash-MAT-meshStandard2--advanced'?: ParamValueSerializedTypeMap['folder'];
	'fxhash-MAT-meshStandard2--doubleSided'?: ParamValueSerializedTypeMap['boolean'];
	'fxhash-MAT-meshStandard2--front'?: ParamValueSerializedTypeMap['boolean'];
	'fxhash-MAT-meshStandard2--overrideShadowSide'?: ParamValueSerializedTypeMap['boolean'];
	'fxhash-MAT-meshStandard2--shadowDoubleSided'?: ParamValueSerializedTypeMap['boolean'];
	'fxhash-MAT-meshStandard2--shadowFront'?: ParamValueSerializedTypeMap['boolean'];
	'fxhash-MAT-meshStandard2--colorWrite'?: ParamValueSerializedTypeMap['boolean'];
	'fxhash-MAT-meshStandard2--depthWrite'?: ParamValueSerializedTypeMap['boolean'];
	'fxhash-MAT-meshStandard2--depthTest'?: ParamValueSerializedTypeMap['boolean'];
	'fxhash-MAT-meshStandard2--premultipliedAlpha'?: ParamValueSerializedTypeMap['boolean'];
	'fxhash-MAT-meshStandard2--blending'?: ParamValueSerializedTypeMap['integer'];
	'fxhash-MAT-meshStandard2--dithering'?: ParamValueSerializedTypeMap['boolean'];
	'fxhash-MAT-meshStandard2--polygonOffset'?: ParamValueSerializedTypeMap['boolean'];
	'fxhash-MAT-meshStandard2--polygonOffsetFactor'?: ParamValueSerializedTypeMap['integer'];
	'fxhash-MAT-meshStandard2--polygonOffsetUnits'?: ParamValueSerializedTypeMap['integer'];
	'fxhash-MAT-meshStandard2--wireframe'?: ParamValueSerializedTypeMap['boolean'];
	'fxhash-MAT-meshStandard2--wireframeLinewidth'?: ParamValueSerializedTypeMap['float'];
	'fxhash-MAT-meshStandard2--wireframeLinecap'?: ParamValueSerializedTypeMap['integer'];
	'fxhash-MAT-meshStandard2--wireframeLinejoin'?: ParamValueSerializedTypeMap['integer'];
	'fxhash-MAT-meshStandard2--useFog'?: ParamValueSerializedTypeMap['boolean'];
	'fxhash-MAT-meshStandardBuilder3--default'?: ParamValueSerializedTypeMap['folder'];
	'fxhash-MAT-meshStandardBuilder3--transparent'?: ParamValueSerializedTypeMap['boolean'];
	'fxhash-MAT-meshStandardBuilder3--opacity'?: ParamValueSerializedTypeMap['float'];
	'fxhash-MAT-meshStandardBuilder3--alphaTest'?: ParamValueSerializedTypeMap['float'];
	'fxhash-MAT-meshStandardBuilder3--textures'?: ParamValueSerializedTypeMap['folder'];
	'fxhash-MAT-meshStandardBuilder3--useMap'?: ParamValueSerializedTypeMap['boolean'];
	'fxhash-MAT-meshStandardBuilder3--map'?: ParamValueSerializedTypeMap['node_path'];
	'fxhash-MAT-meshStandardBuilder3--useAlphaMap'?: ParamValueSerializedTypeMap['boolean'];
	'fxhash-MAT-meshStandardBuilder3--alphaMap'?: ParamValueSerializedTypeMap['node_path'];
	'fxhash-MAT-meshStandardBuilder3--useAOMap'?: ParamValueSerializedTypeMap['boolean'];
	'fxhash-MAT-meshStandardBuilder3--aoMap'?: ParamValueSerializedTypeMap['node_path'];
	'fxhash-MAT-meshStandardBuilder3--aoMapIntensity'?: ParamValueSerializedTypeMap['float'];
	'fxhash-MAT-meshStandardBuilder3--useBumpMap'?: ParamValueSerializedTypeMap['boolean'];
	'fxhash-MAT-meshStandardBuilder3--bumpMap'?: ParamValueSerializedTypeMap['node_path'];
	'fxhash-MAT-meshStandardBuilder3--bumpScale'?: ParamValueSerializedTypeMap['float'];
	'fxhash-MAT-meshStandardBuilder3--bumpBias'?: ParamValueSerializedTypeMap['float'];
	'fxhash-MAT-meshStandardBuilder3--useDisplacementMap'?: ParamValueSerializedTypeMap['boolean'];
	'fxhash-MAT-meshStandardBuilder3--displacementMap'?: ParamValueSerializedTypeMap['node_path'];
	'fxhash-MAT-meshStandardBuilder3--displacementScale'?: ParamValueSerializedTypeMap['float'];
	'fxhash-MAT-meshStandardBuilder3--displacementBias'?: ParamValueSerializedTypeMap['float'];
	'fxhash-MAT-meshStandardBuilder3--emissive'?: ParamValueSerializedTypeMap['color'];
	'fxhash-MAT-meshStandardBuilder3--emissive-emissiver'?: ParamValueSerializedTypeMap['float'];
	'fxhash-MAT-meshStandardBuilder3--emissive-emissiveg'?: ParamValueSerializedTypeMap['float'];
	'fxhash-MAT-meshStandardBuilder3--emissive-emissiveb'?: ParamValueSerializedTypeMap['float'];
	'fxhash-MAT-meshStandardBuilder3--emissiver'?: ParamValueSerializedTypeMap['float'];
	'fxhash-MAT-meshStandardBuilder3--emissiveg'?: ParamValueSerializedTypeMap['float'];
	'fxhash-MAT-meshStandardBuilder3--emissiveb'?: ParamValueSerializedTypeMap['float'];
	'fxhash-MAT-meshStandardBuilder3--useEmissiveMap'?: ParamValueSerializedTypeMap['boolean'];
	'fxhash-MAT-meshStandardBuilder3--emissiveMap'?: ParamValueSerializedTypeMap['node_path'];
	'fxhash-MAT-meshStandardBuilder3--emissiveIntensity'?: ParamValueSerializedTypeMap['float'];
	'fxhash-MAT-meshStandardBuilder3--useEnvMap'?: ParamValueSerializedTypeMap['boolean'];
	'fxhash-MAT-meshStandardBuilder3--envMap'?: ParamValueSerializedTypeMap['node_path'];
	'fxhash-MAT-meshStandardBuilder3--envMapIntensity'?: ParamValueSerializedTypeMap['float'];
	'fxhash-MAT-meshStandardBuilder3--useLightMap'?: ParamValueSerializedTypeMap['boolean'];
	'fxhash-MAT-meshStandardBuilder3--lightMap'?: ParamValueSerializedTypeMap['node_path'];
	'fxhash-MAT-meshStandardBuilder3--lightMapIntensity'?: ParamValueSerializedTypeMap['float'];
	'fxhash-MAT-meshStandardBuilder3--useNormalMap'?: ParamValueSerializedTypeMap['boolean'];
	'fxhash-MAT-meshStandardBuilder3--normalMap'?: ParamValueSerializedTypeMap['node_path'];
	'fxhash-MAT-meshStandardBuilder3--normalMapType'?: ParamValueSerializedTypeMap['integer'];
	'fxhash-MAT-meshStandardBuilder3--normalScale'?: ParamValueSerializedTypeMap['vector2'];
	'fxhash-MAT-meshStandardBuilder3--normalScale-normalScalex'?: ParamValueSerializedTypeMap['float'];
	'fxhash-MAT-meshStandardBuilder3--normalScale-normalScaley'?: ParamValueSerializedTypeMap['float'];
	'fxhash-MAT-meshStandardBuilder3--normalScalex'?: ParamValueSerializedTypeMap['float'];
	'fxhash-MAT-meshStandardBuilder3--normalScaley'?: ParamValueSerializedTypeMap['float'];
	'fxhash-MAT-meshStandardBuilder3--normalScaleMult'?: ParamValueSerializedTypeMap['float'];
	'fxhash-MAT-meshStandardBuilder3--useMetalnessMap'?: ParamValueSerializedTypeMap['boolean'];
	'fxhash-MAT-meshStandardBuilder3--metalnessMap'?: ParamValueSerializedTypeMap['node_path'];
	'fxhash-MAT-meshStandardBuilder3--metalness'?: ParamValueSerializedTypeMap['float'];
	'fxhash-MAT-meshStandardBuilder3--useRoughnessMap'?: ParamValueSerializedTypeMap['boolean'];
	'fxhash-MAT-meshStandardBuilder3--roughnessMap'?: ParamValueSerializedTypeMap['node_path'];
	'fxhash-MAT-meshStandardBuilder3--roughness'?: ParamValueSerializedTypeMap['float'];
	'fxhash-MAT-meshStandardBuilder3--advanced'?: ParamValueSerializedTypeMap['folder'];
	'fxhash-MAT-meshStandardBuilder3--setBuilderNode'?: ParamValueSerializedTypeMap['boolean'];
	'fxhash-MAT-meshStandardBuilder3--builderNode'?: ParamValueSerializedTypeMap['node_path'];
	'fxhash-MAT-meshStandardBuilder3--doubleSided'?: ParamValueSerializedTypeMap['boolean'];
	'fxhash-MAT-meshStandardBuilder3--front'?: ParamValueSerializedTypeMap['boolean'];
	'fxhash-MAT-meshStandardBuilder3--overrideShadowSide'?: ParamValueSerializedTypeMap['boolean'];
	'fxhash-MAT-meshStandardBuilder3--shadowDoubleSided'?: ParamValueSerializedTypeMap['boolean'];
	'fxhash-MAT-meshStandardBuilder3--shadowFront'?: ParamValueSerializedTypeMap['boolean'];
	'fxhash-MAT-meshStandardBuilder3--colorWrite'?: ParamValueSerializedTypeMap['boolean'];
	'fxhash-MAT-meshStandardBuilder3--depthWrite'?: ParamValueSerializedTypeMap['boolean'];
	'fxhash-MAT-meshStandardBuilder3--depthTest'?: ParamValueSerializedTypeMap['boolean'];
	'fxhash-MAT-meshStandardBuilder3--premultipliedAlpha'?: ParamValueSerializedTypeMap['boolean'];
	'fxhash-MAT-meshStandardBuilder3--blending'?: ParamValueSerializedTypeMap['integer'];
	'fxhash-MAT-meshStandardBuilder3--dithering'?: ParamValueSerializedTypeMap['boolean'];
	'fxhash-MAT-meshStandardBuilder3--polygonOffset'?: ParamValueSerializedTypeMap['boolean'];
	'fxhash-MAT-meshStandardBuilder3--polygonOffsetFactor'?: ParamValueSerializedTypeMap['integer'];
	'fxhash-MAT-meshStandardBuilder3--polygonOffsetUnits'?: ParamValueSerializedTypeMap['integer'];
	'fxhash-MAT-meshStandardBuilder3--wireframe'?: ParamValueSerializedTypeMap['boolean'];
	'fxhash-MAT-meshStandardBuilder3--wireframeLinewidth'?: ParamValueSerializedTypeMap['float'];
	'fxhash-MAT-meshStandardBuilder3--useFog'?: ParamValueSerializedTypeMap['boolean'];
	'fxhash-MAT-meshStandardBuilder3--shadowPCSS'?: ParamValueSerializedTypeMap['boolean'];
	'fxhash-MAT-meshStandardBuilder3--shadowPCSSFilterSize'?: ParamValueSerializedTypeMap['float'];
	'floor--transform'?: ParamValueSerializedTypeMap['folder'];
	'floor--keepPosWhenParenting'?: ParamValueSerializedTypeMap['boolean'];
	'floor--rotationOrder'?: ParamValueSerializedTypeMap['integer'];
	'floor--t'?: ParamValueSerializedTypeMap['vector3'];
	'floor--t-tx'?: ParamValueSerializedTypeMap['float'];
	'floor--t-ty'?: ParamValueSerializedTypeMap['float'];
	'floor--t-tz'?: ParamValueSerializedTypeMap['float'];
	'floor--tx'?: ParamValueSerializedTypeMap['float'];
	'floor--ty'?: ParamValueSerializedTypeMap['float'];
	'floor--tz'?: ParamValueSerializedTypeMap['float'];
	'floor--r'?: ParamValueSerializedTypeMap['vector3'];
	'floor--r-rx'?: ParamValueSerializedTypeMap['float'];
	'floor--r-ry'?: ParamValueSerializedTypeMap['float'];
	'floor--r-rz'?: ParamValueSerializedTypeMap['float'];
	'floor--rx'?: ParamValueSerializedTypeMap['float'];
	'floor--ry'?: ParamValueSerializedTypeMap['float'];
	'floor--rz'?: ParamValueSerializedTypeMap['float'];
	'floor--s'?: ParamValueSerializedTypeMap['vector3'];
	'floor--s-sx'?: ParamValueSerializedTypeMap['float'];
	'floor--s-sy'?: ParamValueSerializedTypeMap['float'];
	'floor--s-sz'?: ParamValueSerializedTypeMap['float'];
	'floor--sx'?: ParamValueSerializedTypeMap['float'];
	'floor--sy'?: ParamValueSerializedTypeMap['float'];
	'floor--sz'?: ParamValueSerializedTypeMap['float'];
	'floor--scale'?: ParamValueSerializedTypeMap['float'];
	'floor--matrixAutoUpdate'?: ParamValueSerializedTypeMap['boolean'];
	'floor--updateTransformFromObject'?: ParamValueSerializedTypeMap['button'];
	'floor--display'?: ParamValueSerializedTypeMap['boolean'];
	'floor--renderOrder'?: ParamValueSerializedTypeMap['integer'];
	'floor-plane1--size'?: ParamValueSerializedTypeMap['vector2'];
	'floor-plane1--size-sizex'?: ParamValueSerializedTypeMap['float'];
	'floor-plane1--size-sizey'?: ParamValueSerializedTypeMap['float'];
	'floor-plane1--sizex'?: ParamValueSerializedTypeMap['float'];
	'floor-plane1--sizey'?: ParamValueSerializedTypeMap['float'];
	'floor-plane1--useSegmentsCount'?: ParamValueSerializedTypeMap['boolean'];
	'floor-plane1--stepSize'?: ParamValueSerializedTypeMap['float'];
	'floor-plane1--segments'?: ParamValueSerializedTypeMap['vector2'];
	'floor-plane1--segments-segmentsx'?: ParamValueSerializedTypeMap['float'];
	'floor-plane1--segments-segmentsy'?: ParamValueSerializedTypeMap['float'];
	'floor-plane1--segmentsx'?: ParamValueSerializedTypeMap['float'];
	'floor-plane1--segmentsy'?: ParamValueSerializedTypeMap['float'];
	'floor-plane1--direction'?: ParamValueSerializedTypeMap['vector3'];
	'floor-plane1--direction-directionx'?: ParamValueSerializedTypeMap['float'];
	'floor-plane1--direction-directiony'?: ParamValueSerializedTypeMap['float'];
	'floor-plane1--direction-directionz'?: ParamValueSerializedTypeMap['float'];
	'floor-plane1--directionx'?: ParamValueSerializedTypeMap['float'];
	'floor-plane1--directiony'?: ParamValueSerializedTypeMap['float'];
	'floor-plane1--directionz'?: ParamValueSerializedTypeMap['float'];
	'floor-plane1--center'?: ParamValueSerializedTypeMap['vector3'];
	'floor-plane1--center-centerx'?: ParamValueSerializedTypeMap['float'];
	'floor-plane1--center-centery'?: ParamValueSerializedTypeMap['float'];
	'floor-plane1--center-centerz'?: ParamValueSerializedTypeMap['float'];
	'floor-plane1--centerx'?: ParamValueSerializedTypeMap['float'];
	'floor-plane1--centery'?: ParamValueSerializedTypeMap['float'];
	'floor-plane1--centerz'?: ParamValueSerializedTypeMap['float'];
	'floor-plane1--asLines'?: ParamValueSerializedTypeMap['boolean'];
	'floor-material1--group'?: ParamValueSerializedTypeMap['string'];
	'floor-material1--assignMat'?: ParamValueSerializedTypeMap['boolean'];
	'floor-material1--material'?: ParamValueSerializedTypeMap['node_path'];
	'floor-material1--applyToChildren'?: ParamValueSerializedTypeMap['boolean'];
	'floor-material1--cloneMat'?: ParamValueSerializedTypeMap['boolean'];
	'floor-material1--shareCustomUniforms'?: ParamValueSerializedTypeMap['boolean'];
	'floor-material1--swapCurrentTex'?: ParamValueSerializedTypeMap['boolean'];
	'floor-material1--texSrc0'?: ParamValueSerializedTypeMap['string'];
	'floor-material1--texDest0'?: ParamValueSerializedTypeMap['string'];
	'floor-MAT-meshStandard1--default'?: ParamValueSerializedTypeMap['folder'];
	'floor-MAT-meshStandard1--color'?: ParamValueSerializedTypeMap['color'];
	'floor-MAT-meshStandard1--color-colorr'?: ParamValueSerializedTypeMap['float'];
	'floor-MAT-meshStandard1--color-colorg'?: ParamValueSerializedTypeMap['float'];
	'floor-MAT-meshStandard1--color-colorb'?: ParamValueSerializedTypeMap['float'];
	'floor-MAT-meshStandard1--colorr'?: ParamValueSerializedTypeMap['float'];
	'floor-MAT-meshStandard1--colorg'?: ParamValueSerializedTypeMap['float'];
	'floor-MAT-meshStandard1--colorb'?: ParamValueSerializedTypeMap['float'];
	'floor-MAT-meshStandard1--useVertexColors'?: ParamValueSerializedTypeMap['boolean'];
	'floor-MAT-meshStandard1--transparent'?: ParamValueSerializedTypeMap['boolean'];
	'floor-MAT-meshStandard1--opacity'?: ParamValueSerializedTypeMap['float'];
	'floor-MAT-meshStandard1--alphaTest'?: ParamValueSerializedTypeMap['float'];
	'floor-MAT-meshStandard1--textures'?: ParamValueSerializedTypeMap['folder'];
	'floor-MAT-meshStandard1--useMap'?: ParamValueSerializedTypeMap['boolean'];
	'floor-MAT-meshStandard1--map'?: ParamValueSerializedTypeMap['node_path'];
	'floor-MAT-meshStandard1--useAlphaMap'?: ParamValueSerializedTypeMap['boolean'];
	'floor-MAT-meshStandard1--alphaMap'?: ParamValueSerializedTypeMap['node_path'];
	'floor-MAT-meshStandard1--useAOMap'?: ParamValueSerializedTypeMap['boolean'];
	'floor-MAT-meshStandard1--aoMap'?: ParamValueSerializedTypeMap['node_path'];
	'floor-MAT-meshStandard1--aoMapIntensity'?: ParamValueSerializedTypeMap['float'];
	'floor-MAT-meshStandard1--useBumpMap'?: ParamValueSerializedTypeMap['boolean'];
	'floor-MAT-meshStandard1--bumpMap'?: ParamValueSerializedTypeMap['node_path'];
	'floor-MAT-meshStandard1--bumpScale'?: ParamValueSerializedTypeMap['float'];
	'floor-MAT-meshStandard1--bumpBias'?: ParamValueSerializedTypeMap['float'];
	'floor-MAT-meshStandard1--useDisplacementMap'?: ParamValueSerializedTypeMap['boolean'];
	'floor-MAT-meshStandard1--displacementMap'?: ParamValueSerializedTypeMap['node_path'];
	'floor-MAT-meshStandard1--displacementScale'?: ParamValueSerializedTypeMap['float'];
	'floor-MAT-meshStandard1--displacementBias'?: ParamValueSerializedTypeMap['float'];
	'floor-MAT-meshStandard1--emissive'?: ParamValueSerializedTypeMap['color'];
	'floor-MAT-meshStandard1--emissive-emissiver'?: ParamValueSerializedTypeMap['float'];
	'floor-MAT-meshStandard1--emissive-emissiveg'?: ParamValueSerializedTypeMap['float'];
	'floor-MAT-meshStandard1--emissive-emissiveb'?: ParamValueSerializedTypeMap['float'];
	'floor-MAT-meshStandard1--emissiver'?: ParamValueSerializedTypeMap['float'];
	'floor-MAT-meshStandard1--emissiveg'?: ParamValueSerializedTypeMap['float'];
	'floor-MAT-meshStandard1--emissiveb'?: ParamValueSerializedTypeMap['float'];
	'floor-MAT-meshStandard1--useEmissiveMap'?: ParamValueSerializedTypeMap['boolean'];
	'floor-MAT-meshStandard1--emissiveMap'?: ParamValueSerializedTypeMap['node_path'];
	'floor-MAT-meshStandard1--emissiveIntensity'?: ParamValueSerializedTypeMap['float'];
	'floor-MAT-meshStandard1--useEnvMap'?: ParamValueSerializedTypeMap['boolean'];
	'floor-MAT-meshStandard1--envMap'?: ParamValueSerializedTypeMap['node_path'];
	'floor-MAT-meshStandard1--envMapIntensity'?: ParamValueSerializedTypeMap['float'];
	'floor-MAT-meshStandard1--useLightMap'?: ParamValueSerializedTypeMap['boolean'];
	'floor-MAT-meshStandard1--lightMap'?: ParamValueSerializedTypeMap['node_path'];
	'floor-MAT-meshStandard1--lightMapIntensity'?: ParamValueSerializedTypeMap['float'];
	'floor-MAT-meshStandard1--useNormalMap'?: ParamValueSerializedTypeMap['boolean'];
	'floor-MAT-meshStandard1--normalMap'?: ParamValueSerializedTypeMap['node_path'];
	'floor-MAT-meshStandard1--normalMapType'?: ParamValueSerializedTypeMap['integer'];
	'floor-MAT-meshStandard1--normalScale'?: ParamValueSerializedTypeMap['vector2'];
	'floor-MAT-meshStandard1--normalScale-normalScalex'?: ParamValueSerializedTypeMap['float'];
	'floor-MAT-meshStandard1--normalScale-normalScaley'?: ParamValueSerializedTypeMap['float'];
	'floor-MAT-meshStandard1--normalScalex'?: ParamValueSerializedTypeMap['float'];
	'floor-MAT-meshStandard1--normalScaley'?: ParamValueSerializedTypeMap['float'];
	'floor-MAT-meshStandard1--normalScaleMult'?: ParamValueSerializedTypeMap['float'];
	'floor-MAT-meshStandard1--useMetalnessMap'?: ParamValueSerializedTypeMap['boolean'];
	'floor-MAT-meshStandard1--metalnessMap'?: ParamValueSerializedTypeMap['node_path'];
	'floor-MAT-meshStandard1--metalness'?: ParamValueSerializedTypeMap['float'];
	'floor-MAT-meshStandard1--useRoughnessMap'?: ParamValueSerializedTypeMap['boolean'];
	'floor-MAT-meshStandard1--roughnessMap'?: ParamValueSerializedTypeMap['node_path'];
	'floor-MAT-meshStandard1--roughness'?: ParamValueSerializedTypeMap['float'];
	'floor-MAT-meshStandard1--advanced'?: ParamValueSerializedTypeMap['folder'];
	'floor-MAT-meshStandard1--doubleSided'?: ParamValueSerializedTypeMap['boolean'];
	'floor-MAT-meshStandard1--front'?: ParamValueSerializedTypeMap['boolean'];
	'floor-MAT-meshStandard1--overrideShadowSide'?: ParamValueSerializedTypeMap['boolean'];
	'floor-MAT-meshStandard1--shadowDoubleSided'?: ParamValueSerializedTypeMap['boolean'];
	'floor-MAT-meshStandard1--shadowFront'?: ParamValueSerializedTypeMap['boolean'];
	'floor-MAT-meshStandard1--colorWrite'?: ParamValueSerializedTypeMap['boolean'];
	'floor-MAT-meshStandard1--depthWrite'?: ParamValueSerializedTypeMap['boolean'];
	'floor-MAT-meshStandard1--depthTest'?: ParamValueSerializedTypeMap['boolean'];
	'floor-MAT-meshStandard1--premultipliedAlpha'?: ParamValueSerializedTypeMap['boolean'];
	'floor-MAT-meshStandard1--blending'?: ParamValueSerializedTypeMap['integer'];
	'floor-MAT-meshStandard1--dithering'?: ParamValueSerializedTypeMap['boolean'];
	'floor-MAT-meshStandard1--polygonOffset'?: ParamValueSerializedTypeMap['boolean'];
	'floor-MAT-meshStandard1--polygonOffsetFactor'?: ParamValueSerializedTypeMap['integer'];
	'floor-MAT-meshStandard1--polygonOffsetUnits'?: ParamValueSerializedTypeMap['integer'];
	'floor-MAT-meshStandard1--wireframe'?: ParamValueSerializedTypeMap['boolean'];
	'floor-MAT-meshStandard1--wireframeLinewidth'?: ParamValueSerializedTypeMap['float'];
	'floor-MAT-meshStandard1--wireframeLinecap'?: ParamValueSerializedTypeMap['integer'];
	'floor-MAT-meshStandard1--wireframeLinejoin'?: ParamValueSerializedTypeMap['integer'];
	'floor-MAT-meshStandard1--useFog'?: ParamValueSerializedTypeMap['boolean'];
}
